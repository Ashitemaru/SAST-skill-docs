{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u8ba1\u7b97\u673a\u7cfb\u5b66\u751f\u79d1\u534f\u6280\u80fd\u5f15\u5bfc\u6587\u6863 \u00b6 \u7f16\u8f91\u8005\u987b\u77e5 \u00b6 \u6587\u6863\u57fa\u672c\u7ed3\u6784 \u00b6 \u4e00\u4efd\u5b8c\u6574\u7684\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u81f3\u5c11\u5e94\u5f53\u5305\u542b\u4ee5\u4e0b\u90e8\u5206\uff1a \u524d\u7f6e\u77e5\u8bc6 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u6307\u660e\u9605\u8bfb\u8fd9\u4e00\u4efd\u6587\u6863\u6240\u9700\u8981\u7684\u6240\u6709\u524d\u7f6e\u77e5\u8bc6\u3002 \u77e5\u8bc6\u8bb2\u89e3 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u5bf9\u77e5\u8bc6\u70b9\u6709\u6761\u7406\u5730\u8fdb\u884c\u8bb2\u89e3\uff0c\u5e76\u4e14\u9002\u5f53\u5730\u5f15\u7528\u5916\u90e8\u8d44\u6e90\u4f5c\u4e3a\u8f85\u52a9\u3002 \u540e\u7eed\u62d3\u5c55 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u53ef\u4ee5\u6307\u51fa\u5b66\u4e60\u5b8c\u8fd9\u4e00\u90e8\u5206\u77e5\u8bc6\u540e\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b66\u4e60\u7684\u9886\u57df\uff0c\u6216\u8005\u53ef\u4ee5\u5e94\u7528\u8fd9\u4e9b\u77e5\u8bc6\u7684\u8bfe\u7a0b\u3002 \u8d44\u6e90\u94fe\u63a5 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u5c06\u6587\u6863\u4e2d\u6240\u5f15\u7528\u7684\u8d44\u6e90\u5217\u51fa\uff0c\u7f16\u8f91\u8005\u6709\u8d23\u4efb\u4fdd\u8bc1\u8d44\u6e90\u6709\u6548\u3001\u53ef\u8bbf\u95ee\u3002\u90e8\u5206\u7528\u4e8e\u77e5\u8bc6\u62d3\u5c55\u7684\u8d44\u6e90\u4e5f\u53ef\u4ee5\u653e\u7f6e\u5728\u8fd9\u4e00\u90e8\u5206\u3002 \u6587\u6863\u884c\u6587\u57fa\u672c\u8981\u6c42 \u00b6 \u6211\u4eec\u5e76\u4e0d\u4e25\u683c\u8981\u6c42\u6587\u6863\u7684\u5177\u4f53\u683c\u5f0f\u548c\u8bed\u8a00\u98ce\u683c\uff0c\u4f46\u7f16\u8f91\u8005\u5e94\u5f53\u5c3d\u91cf\u9075\u5b88\u4ee5\u4e0b\u57fa\u672c\u7684\u6587\u6863\u8981\u6c42\uff1a \u6b63\u6587\u7684\u8bed\u8a00\u98ce\u683c\u5c3d\u91cf\u6b63\u5f0f\uff0c\u611f\u609f\u3001\u601d\u8003\u3001\u542f\u53d1\u3001\u524d\u8a00\u7b49\u975e\u6b63\u5f0f\u7528\u8bed\u7684\u5185\u5bb9\u5c3d\u91cf\u4f7f\u7528\u5f15\u7528\u5757\uff08\u8bed\u6cd5\u4e3a !!! note \uff09\u8868\u793a\u3002 \u540d\u8bcd\u7684\u5916\u8bed\u7ffb\u8bd1\u4e66\u5199\u683c\u5f0f\u7c7b\u4f3c \u8bed\u6cd5\u7cd6\uff08\u82f1\u8bed\uff1aSyntactic sugar\uff09 \u3002 \u5355\u884c\u8d85\u94fe\u63a5\u4e66\u5199\u683c\u5f0f\u7c7b\u4f3c \u83dc\u9e1f\u6559\u7a0b <https://www.runoob.com/markdown/md-tutorial.html> \u3002 \u6570\u5b57\u3001\u897f\u6587\u5355\u8bcd\u3001\u884c\u5185\u4ee3\u7801\u5757\u3001\u884c\u5185\u8d85\u94fe\u63a5\u4e0e\u524d\u540e\u6587\u5b57\u4e4b\u95f4\u5747\u5e94\u5f53\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u6570\u5b57\u3001\u897f\u6587\u5355\u8bcd\u3001\u884c\u5185\u4ee3\u7801\u5757\u3001\u884c\u5185\u8d85\u94fe\u63a5\u4e0e\u70b9\u53f7\u4e4b\u95f4\u4e0d\u9700\u8981\u4f7f\u7528\u7a7a\u683c\u9694\u5f00\u3002 \u7f16\u8f91\u8005\u7acb\u573a \u00b6 \u6211\u4eec\u5e0c\u671b\u7f16\u8f91\u8005\u5c3d\u91cf\u7ad9\u5728\u5ba2\u89c2\u7684\u89d2\u5ea6\u3001\u4ee5 \u521d\u5b66\u8005\u7684\u89c6\u89d2 \u7f16\u5199\u5f15\u5bfc\u6587\u6863\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u9605\u8bfb\u8005\u5177\u6709\u4e86\u6587\u6863\u4e4b\u4e2d\u8981\u6c42\u7684\u524d\u7f6e\u77e5\u8bc6\uff0c\u5c31\u5e94\u5f53\u80fd\u591f\u65e0\u969c\u788d\u9605\u8bfb\u5b66\u4e60\u6587\u6863\u5185\u5bb9\u3002 Note \u4f8b\u5982\uff0c\u5bf9\u4e8e\u53ef\u4ee5\u901a\u8fc7\u524d\u7f6e\u77e5\u8bc6\u4e86\u89e3\u800c\u4e0d\u9700\u8981\u8be6\u7ec6\u8bb2\u89e3\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u5728\u524d\u7f6e\u77e5\u8bc6\u90e8\u5206\u58f0\u660e\u4e4b\u540e\u4f7f\u7528\u7c7b\u4f3c\u5982\u4e0b\u7684\u8868\u8ff0\uff1a TypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u7c7b\u4f3c\u4e8e ES6 \u6807\u51c6\u4e2d JavaScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\uff0c\u6545\u6b64\u5904\u4ec5\u7ed9\u51fa\u6837\u4f8b\u7a0b\u5e8f\u800c\u4e0d\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cTypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u5141\u8bb8\u58f0\u660e\u7c7b\u6210\u5458\u548c\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u5bf9\u4e8e\u53ef\u4ee5\u53c2\u7167\u5176\u4ed6\u6587\u6863\u800c\u4e0d\u9700\u8981\u8be6\u7ec6\u8bb2\u89e3\u7684\u77e5\u8bc6\u4e5f\u53ef\u4ee5\u91c7\u7528\u8fd9\u7c7b\u8868\u8ff0\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u7f16\u8f91\u8005\u91c7\u7528\u7c7b\u4f3c\u5982\u4e0b\u7684\u8868\u8ff0\uff1a \u8bfb\u8005\u5e94\u5f53\u5df2\u7ecf\u5728\u300a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u4e4b\u4e2d\u5b66\u4e60\u8fc7\u7c7b\u4f3c\u77e5\u8bc6\uff0c\u8fd9\u91cc\u4e0d\u8fdb\u884c\u8868\u8ff0\u3002 \u8fd9\u7c7b\u8868\u8ff0\u95ee\u9898\u5728\u4e8e\u5176\u5f15\u7528\u7684\u8d44\u6e90\uff08\u8bfe\u7a0b\u8d44\u6e90\uff09\u5e76\u4e0d\u80fd\u81ea\u7531\u83b7\u53d6\uff0c\u8fd9\u7c7b\u8868\u8ff0\u53ef\u80fd\u9020\u6210\u8bfb\u8005\u5b66\u4e60\u7684\u969c\u788d\u3002\u89e3\u51b3\u65b9\u5f0f\u662f\u7f16\u8f91\u8005\u5728\u6587\u6863\u4e2d\u505a\u51fa\u8be6\u7ec6\u89e3\u91ca\u6216\u5728\u8d44\u6e90\u94fe\u63a5\u90e8\u5206\u7ed9\u51fa\u76f8\u5173\u8d44\u6599\u3002","title":"Welcome to SAST skill docs"},{"location":"#_1","text":"","title":"\u8ba1\u7b97\u673a\u7cfb\u5b66\u751f\u79d1\u534f\u6280\u80fd\u5f15\u5bfc\u6587\u6863"},{"location":"#_2","text":"","title":"\u7f16\u8f91\u8005\u987b\u77e5"},{"location":"#_3","text":"\u4e00\u4efd\u5b8c\u6574\u7684\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u81f3\u5c11\u5e94\u5f53\u5305\u542b\u4ee5\u4e0b\u90e8\u5206\uff1a \u524d\u7f6e\u77e5\u8bc6 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u6307\u660e\u9605\u8bfb\u8fd9\u4e00\u4efd\u6587\u6863\u6240\u9700\u8981\u7684\u6240\u6709\u524d\u7f6e\u77e5\u8bc6\u3002 \u77e5\u8bc6\u8bb2\u89e3 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u5bf9\u77e5\u8bc6\u70b9\u6709\u6761\u7406\u5730\u8fdb\u884c\u8bb2\u89e3\uff0c\u5e76\u4e14\u9002\u5f53\u5730\u5f15\u7528\u5916\u90e8\u8d44\u6e90\u4f5c\u4e3a\u8f85\u52a9\u3002 \u540e\u7eed\u62d3\u5c55 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u53ef\u4ee5\u6307\u51fa\u5b66\u4e60\u5b8c\u8fd9\u4e00\u90e8\u5206\u77e5\u8bc6\u540e\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b66\u4e60\u7684\u9886\u57df\uff0c\u6216\u8005\u53ef\u4ee5\u5e94\u7528\u8fd9\u4e9b\u77e5\u8bc6\u7684\u8bfe\u7a0b\u3002 \u8d44\u6e90\u94fe\u63a5 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u5c06\u6587\u6863\u4e2d\u6240\u5f15\u7528\u7684\u8d44\u6e90\u5217\u51fa\uff0c\u7f16\u8f91\u8005\u6709\u8d23\u4efb\u4fdd\u8bc1\u8d44\u6e90\u6709\u6548\u3001\u53ef\u8bbf\u95ee\u3002\u90e8\u5206\u7528\u4e8e\u77e5\u8bc6\u62d3\u5c55\u7684\u8d44\u6e90\u4e5f\u53ef\u4ee5\u653e\u7f6e\u5728\u8fd9\u4e00\u90e8\u5206\u3002","title":"\u6587\u6863\u57fa\u672c\u7ed3\u6784"},{"location":"#_4","text":"\u6211\u4eec\u5e76\u4e0d\u4e25\u683c\u8981\u6c42\u6587\u6863\u7684\u5177\u4f53\u683c\u5f0f\u548c\u8bed\u8a00\u98ce\u683c\uff0c\u4f46\u7f16\u8f91\u8005\u5e94\u5f53\u5c3d\u91cf\u9075\u5b88\u4ee5\u4e0b\u57fa\u672c\u7684\u6587\u6863\u8981\u6c42\uff1a \u6b63\u6587\u7684\u8bed\u8a00\u98ce\u683c\u5c3d\u91cf\u6b63\u5f0f\uff0c\u611f\u609f\u3001\u601d\u8003\u3001\u542f\u53d1\u3001\u524d\u8a00\u7b49\u975e\u6b63\u5f0f\u7528\u8bed\u7684\u5185\u5bb9\u5c3d\u91cf\u4f7f\u7528\u5f15\u7528\u5757\uff08\u8bed\u6cd5\u4e3a !!! note \uff09\u8868\u793a\u3002 \u540d\u8bcd\u7684\u5916\u8bed\u7ffb\u8bd1\u4e66\u5199\u683c\u5f0f\u7c7b\u4f3c \u8bed\u6cd5\u7cd6\uff08\u82f1\u8bed\uff1aSyntactic sugar\uff09 \u3002 \u5355\u884c\u8d85\u94fe\u63a5\u4e66\u5199\u683c\u5f0f\u7c7b\u4f3c \u83dc\u9e1f\u6559\u7a0b <https://www.runoob.com/markdown/md-tutorial.html> \u3002 \u6570\u5b57\u3001\u897f\u6587\u5355\u8bcd\u3001\u884c\u5185\u4ee3\u7801\u5757\u3001\u884c\u5185\u8d85\u94fe\u63a5\u4e0e\u524d\u540e\u6587\u5b57\u4e4b\u95f4\u5747\u5e94\u5f53\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u6570\u5b57\u3001\u897f\u6587\u5355\u8bcd\u3001\u884c\u5185\u4ee3\u7801\u5757\u3001\u884c\u5185\u8d85\u94fe\u63a5\u4e0e\u70b9\u53f7\u4e4b\u95f4\u4e0d\u9700\u8981\u4f7f\u7528\u7a7a\u683c\u9694\u5f00\u3002","title":"\u6587\u6863\u884c\u6587\u57fa\u672c\u8981\u6c42"},{"location":"#_5","text":"\u6211\u4eec\u5e0c\u671b\u7f16\u8f91\u8005\u5c3d\u91cf\u7ad9\u5728\u5ba2\u89c2\u7684\u89d2\u5ea6\u3001\u4ee5 \u521d\u5b66\u8005\u7684\u89c6\u89d2 \u7f16\u5199\u5f15\u5bfc\u6587\u6863\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u9605\u8bfb\u8005\u5177\u6709\u4e86\u6587\u6863\u4e4b\u4e2d\u8981\u6c42\u7684\u524d\u7f6e\u77e5\u8bc6\uff0c\u5c31\u5e94\u5f53\u80fd\u591f\u65e0\u969c\u788d\u9605\u8bfb\u5b66\u4e60\u6587\u6863\u5185\u5bb9\u3002 Note \u4f8b\u5982\uff0c\u5bf9\u4e8e\u53ef\u4ee5\u901a\u8fc7\u524d\u7f6e\u77e5\u8bc6\u4e86\u89e3\u800c\u4e0d\u9700\u8981\u8be6\u7ec6\u8bb2\u89e3\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u5728\u524d\u7f6e\u77e5\u8bc6\u90e8\u5206\u58f0\u660e\u4e4b\u540e\u4f7f\u7528\u7c7b\u4f3c\u5982\u4e0b\u7684\u8868\u8ff0\uff1a TypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u7c7b\u4f3c\u4e8e ES6 \u6807\u51c6\u4e2d JavaScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\uff0c\u6545\u6b64\u5904\u4ec5\u7ed9\u51fa\u6837\u4f8b\u7a0b\u5e8f\u800c\u4e0d\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cTypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u5141\u8bb8\u58f0\u660e\u7c7b\u6210\u5458\u548c\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u5bf9\u4e8e\u53ef\u4ee5\u53c2\u7167\u5176\u4ed6\u6587\u6863\u800c\u4e0d\u9700\u8981\u8be6\u7ec6\u8bb2\u89e3\u7684\u77e5\u8bc6\u4e5f\u53ef\u4ee5\u91c7\u7528\u8fd9\u7c7b\u8868\u8ff0\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u7f16\u8f91\u8005\u91c7\u7528\u7c7b\u4f3c\u5982\u4e0b\u7684\u8868\u8ff0\uff1a \u8bfb\u8005\u5e94\u5f53\u5df2\u7ecf\u5728\u300a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u4e4b\u4e2d\u5b66\u4e60\u8fc7\u7c7b\u4f3c\u77e5\u8bc6\uff0c\u8fd9\u91cc\u4e0d\u8fdb\u884c\u8868\u8ff0\u3002 \u8fd9\u7c7b\u8868\u8ff0\u95ee\u9898\u5728\u4e8e\u5176\u5f15\u7528\u7684\u8d44\u6e90\uff08\u8bfe\u7a0b\u8d44\u6e90\uff09\u5e76\u4e0d\u80fd\u81ea\u7531\u83b7\u53d6\uff0c\u8fd9\u7c7b\u8868\u8ff0\u53ef\u80fd\u9020\u6210\u8bfb\u8005\u5b66\u4e60\u7684\u969c\u788d\u3002\u89e3\u51b3\u65b9\u5f0f\u662f\u7f16\u8f91\u8005\u5728\u6587\u6863\u4e2d\u505a\u51fa\u8be6\u7ec6\u89e3\u91ca\u6216\u5728\u8d44\u6e90\u94fe\u63a5\u90e8\u5206\u7ed9\u51fa\u76f8\u5173\u8d44\u6599\u3002","title":"\u7f16\u8f91\u8005\u7acb\u573a"},{"location":"course/","text":"\u8bfe\u7a0b\u6307\u5f15 \u00b6 \u672c\u9875\u9762\u5c06\u6839\u636e\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7cfb\u57f9\u517b\u65b9\u6848\u4e2d\u7684\u8bfe\u7a0b\uff0c\u6307\u51fa\u5404\u4e2a\u8bfe\u7a0b\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u53c2\u8003\u7684\u5f15\u5bfc\u6587\u6863\u3002 \u5927\u4e00\u5e74\u7ea7 \u00b6 \u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff08\u79cb\u5b63\u5b66\u671f\uff09 \u00b6 \u57fa\u672c\u6280\u80fd / Linux \u5165\u95e8 \u57fa\u672c\u6280\u80fd / VSCode \u914d\u7f6e \u57fa\u672c\u6280\u80fd / \u5982\u4f55\u4f7f\u7528\u641c\u7d22\u5f15\u64ce \u7f16\u7a0b\u8bed\u8a00 / C \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / \u73b0\u4ee3 C++ \u8bed\u8a00 \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff08\u6625\u5b63\u5b66\u671f\uff09 \u00b6 \u7f16\u7a0b\u8bed\u8a00 / C \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / \u73b0\u4ee3 C++ \u8bed\u8a00 \u7a0b\u5e8f\u8bbe\u8ba1\u8bad\u7ec3\uff08\u590f\u5b63\u5b66\u671f\uff09 \u00b6 \u7f16\u7a0b\u8bed\u8a00 / Python \u8bed\u8a00\u57fa\u7840 \u5927\u4e8c\u5e74\u7ea7 \u00b6 \u4eba\u5de5\u667a\u80fd\u5bfc\u8bba\uff08\u6625\u5b63\u5b66\u671f\uff09 \u00b6 \u4eba\u5de5\u667a\u80fd & \u673a\u5668\u5b66\u4e60 / Pytorch \u5165\u95e8 \u8f6f\u4ef6\u5de5\u7a0b\uff08\u6625\u5b63\u5b66\u671f\uff09 \u00b6 \u7f16\u7a0b\u8bed\u8a00 / JavaScript \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / TypeScript \u8bed\u8a00\u57fa\u7840 \u524d\u7aef\u6846\u67b6 / React \u6846\u67b6\u5165\u95e8 \u524d\u7aef\u6846\u67b6 / \u73b0\u4ee3 React \u6846\u67b6 \u5927\u4e09\u5e74\u7ea7 \u00b6 \u64cd\u4f5c\u7cfb\u7edf\uff08\u6625\u5b63\u5b66\u671f\uff09 \u00b6 \u7f16\u7a0b\u8bed\u8a00 / Rust \u8bed\u8a00\u57fa\u7840","title":"\u8bfe\u7a0b\u6307\u5f15"},{"location":"course/#_1","text":"\u672c\u9875\u9762\u5c06\u6839\u636e\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7cfb\u57f9\u517b\u65b9\u6848\u4e2d\u7684\u8bfe\u7a0b\uff0c\u6307\u51fa\u5404\u4e2a\u8bfe\u7a0b\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u53c2\u8003\u7684\u5f15\u5bfc\u6587\u6863\u3002","title":"\u8bfe\u7a0b\u6307\u5f15"},{"location":"course/#_2","text":"","title":"\u5927\u4e00\u5e74\u7ea7"},{"location":"course/#_3","text":"\u57fa\u672c\u6280\u80fd / Linux \u5165\u95e8 \u57fa\u672c\u6280\u80fd / VSCode \u914d\u7f6e \u57fa\u672c\u6280\u80fd / \u5982\u4f55\u4f7f\u7528\u641c\u7d22\u5f15\u64ce \u7f16\u7a0b\u8bed\u8a00 / C \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / \u73b0\u4ee3 C++ \u8bed\u8a00","title":"\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff08\u79cb\u5b63\u5b66\u671f\uff09"},{"location":"course/#_4","text":"\u7f16\u7a0b\u8bed\u8a00 / C \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / \u73b0\u4ee3 C++ \u8bed\u8a00","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff08\u6625\u5b63\u5b66\u671f\uff09"},{"location":"course/#_5","text":"\u7f16\u7a0b\u8bed\u8a00 / Python \u8bed\u8a00\u57fa\u7840","title":"\u7a0b\u5e8f\u8bbe\u8ba1\u8bad\u7ec3\uff08\u590f\u5b63\u5b66\u671f\uff09"},{"location":"course/#_6","text":"","title":"\u5927\u4e8c\u5e74\u7ea7"},{"location":"course/#_7","text":"\u4eba\u5de5\u667a\u80fd & \u673a\u5668\u5b66\u4e60 / Pytorch \u5165\u95e8","title":"\u4eba\u5de5\u667a\u80fd\u5bfc\u8bba\uff08\u6625\u5b63\u5b66\u671f\uff09"},{"location":"course/#_8","text":"\u7f16\u7a0b\u8bed\u8a00 / JavaScript \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / TypeScript \u8bed\u8a00\u57fa\u7840 \u524d\u7aef\u6846\u67b6 / React \u6846\u67b6\u5165\u95e8 \u524d\u7aef\u6846\u67b6 / \u73b0\u4ee3 React \u6846\u67b6","title":"\u8f6f\u4ef6\u5de5\u7a0b\uff08\u6625\u5b63\u5b66\u671f\uff09"},{"location":"course/#_9","text":"","title":"\u5927\u4e09\u5e74\u7ea7"},{"location":"course/#_10","text":"\u7f16\u7a0b\u8bed\u8a00 / Rust \u8bed\u8a00\u57fa\u7840","title":"\u64cd\u4f5c\u7cfb\u7edf\uff08\u6625\u5b63\u5b66\u671f\uff09"},{"location":"ai-ml/pytorch/","text":"","title":"Pytorch \u5165\u95e8"},{"location":"basic/git/","text":"","title":"Git \u5165\u95e8"},{"location":"basic/linux/","text":"","title":"Linux \u5165\u95e8"},{"location":"basic/md/","text":"Markdown \u5165\u95e8 \u00b6 \u524d\u8a00 Markdown \u662f\u4e00\u79cd\u5b66\u4e60\u6210\u672c\u8f83\u4f4e\u7684\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\u3002\u5b83\u7528\u7b80\u5355\u7684\u6807\u8bb0\u8bed\u6cd5\u4ee3\u66ff\u6309\u94ae\uff0c\u56e0\u6b64\u80fd\u7701\u53bb\u9891\u7e41\u4f7f\u7528\u9f20\u6807\u8c03\u6574\u6392\u7248\u7684\u9ebb\u70e6\uff0c\u4e3a\u6587\u6863\u7f16\u5199\u8005\u63d0\u4f9b\u4fbf\u5229\u3002\u7528 Markdown \u7f16\u5199\u7684\u5185\u5bb9\u53ef\u5bfc\u51fa\u4e3a HTML\u3001Word\u3001PDF \u7b49\u591a\u79cd\u683c\u5f0f\u7684\u6587\u6863\u3002\u7531\u4e8e\u6613\u8bfb\u6613\u5199\uff0c\u5b83\u5728 GitHub\u3001\u7b80\u4e66\u7b49\u7f51\u7ad9\u4e0a\u4e5f\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 \u901a\u8fc7\u9605\u8bfb\u672c\u6587\u6863\uff0c\u8bfb\u8005\u53ef\u4ee5\u5728\u4e94\u5206\u949f\u5185\u5feb\u901f\u5b66\u4e60\u5230\u5e38\u7528\u7684 Markdown \u6807\u8bb0\u3002\u66f4\u591a\u7684\u5185\u5bb9\u8bf7\u79fb\u6b65\u83dc\u9e1f\u6559\u7a0b\u3002 \u5728\u5f00\u59cb\u5b66\u4e60 Markdown \u8bed\u6cd5\u4e4b\u524d\uff0c\u5efa\u8bae\u5148\u901a\u8fc7 Typora \u5b98\u7f51 \u5b89\u88c5\u597d Typora \u7f16\u8f91\u5668\u3002 \u8bed\u6cd5 \u00b6 \u6807\u9898 \u00b6 \u5171\u6709 1-6 \u7ea7\u6807\u9898\uff0c\u4f7f\u7528 # \u6807\u8bb0\u3002 # \u6570\u91cf\u4e0e\u6807\u9898\u7ea7\u522b\u5bf9\u5e94\u3002\u6ce8\u610f # \u4e0e\u6587\u5b57\u95f4\u7684\u7a7a\u683c\u4e0d\u53ef\u7701\u7565\u3002 #### \u56db\u7ea7\u6807\u9898 ##### \u4e94\u7ea7\u6807\u9898 ###### \u516d\u7ea7\u6807\u9898 \u56db\u7ea7\u6807\u9898 \u00b6 \u4e94\u7ea7\u6807\u9898 \u00b6 \u516d\u7ea7\u6807\u9898 \u00b6 \u5b57\u4f53 \u00b6 *\u659c\u4f53* _\u659c\u4f53_ **\u7c97\u4f53** __\u7c97\u4f53__ ***\u7c97\u659c\u4f53*** ___\u7c97\u659c\u4f53___ ~~\u5220\u9664\u7ebf~~ <u>\u4e0b\u5212\u7ebf</u> \u659c\u4f53 \u659c\u4f53 \u7c97\u4f53 \u7c97\u4f53 \u7c97\u659c\u4f53 \u7c97\u659c\u4f53 \u5220\u9664\u7ebf \u4e0b\u5212\u7ebf \u5217\u8868 \u00b6 \u65e0\u5e8f\u5217\u8868\u7528 * \u6216 + \u6216 - \u6807\u8bc6\uff0c\u6709\u5e8f\u5217\u8868\u7528\u6570\u5b57\u548c . \u6765\u6807\u8bc6\uff0c\u652f\u6301\u5217\u8868\u5d4c\u5957\u3002 * \u7b2c\u4e00\u9879 + \u7b2c\u4e8c\u9879 - \u7b2c\u4e09\u9879 1. \u5b50\u9879\u4e00 1. \u5b59\u5b50\u9879\u4e00 * \u91cd\u5b59\u5b50\u9879\u4e00 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u5b50\u9879\u4e00 \u5b59\u5b50\u9879\u4e00 \u91cd\u5b59\u5b50\u9879\u4e00 \u5f15\u7528 \u00b6 > \u8fd9\u662f\u4e00\u6761\u65e0\u610f\u4e49\u7684\u5f15\u7528\u3002 \u8fd9\u662f\u4e00\u6761\u65e0\u610f\u4e49\u7684\u5f15\u7528\u3002 \u4ee3\u7801 \u00b6 \u52a0\u6cd5\u64cd\u4f5c\u7531 `add()` \u51fd\u6570\u5b8c\u6210 \u52a0\u6cd5\u64cd\u4f5c\u7531 add() \u51fd\u6570\u5b8c\u6210 ```Python def add ( a , b ): return a + b ``` def add ( a , b ): return a + b \u94fe\u63a5 \u00b6 [\u83dc\u9e1f\u6559\u7a0b](https://www.runoob.com/markdown/md-tutorial.html) <https://www.runoob.com/markdown/md-tutorial.html> \u83dc\u9e1f\u6559\u7a0b https://www.runoob.com/markdown/md-tutorial.html \u56fe\u7247 \u00b6 \u63d2\u5165\u56fe\u7247\u9700\u4f9d\u7167 ![alt \u5c5e\u6027\u6587\u672c](\u56fe\u7247\u5730\u5740) \u683c\u5f0f\u3002\u6ce8\u610f\u4e0d\u8981\u4f7f\u7528\u672c\u5730\u8def\u5f84\uff0c\u53ef\u4ee5\u5c06\u56fe\u7247\u4e0a\u4f20\u5230\u6e05\u534e\u4e91\u76d8\u518d\u83b7\u53d6\u56fe\u7247\u94fe\u63a5\u3002 ![Typora \u5b98\u7f51\u5c55\u793a\u56fe](https://www.typora.io/img/new/inline.png) \u5176\u4ed6 \u00b6 Markdown \u8fd8\u6709\u4e00\u4e9b\u9ad8\u7ea7\u73a9\u6cd5\uff0c\u4f8b\u5982\u8868\u683c\u3001\u516c\u5f0f\u3001HTML \u5143\u7d20\u3001\u753b\u65f6\u5e8f\u56fe\u3001\u753b\u6d41\u7a0b\u56fe\u7b49\u7b49\u3002\u7531\u4e8e\u4e0d\u662f\u5f88\u5e38\u7528\uff0c\u8fd9\u4e9b\u90fd\u7559\u7ed9\u6709\u5174\u8da3\u7684\u8bfb\u8005\u81ea\u884c\u63a2\u7d22\u3002 \u53cb\u60c5\u94fe\u63a5\uff1a \u83dc\u9e1f\u6559\u7a0b https://www.runoob.com/markdown/md-tutorial.html \u516c\u5f0f\u7f16\u8f91\u6559\u7a0b https://www.jianshu.com/p/25f0139637b7 \u7ed8\u5236\u6d41\u7a0b\u56fe\u3001\u65f6\u5e8f\u56fe\u3001\u7518\u7279\u56fe https://www.jianshu.com/p/6dbcc3aff98b","title":"Markdown \u5165\u95e8"},{"location":"basic/md/#markdown","text":"\u524d\u8a00 Markdown \u662f\u4e00\u79cd\u5b66\u4e60\u6210\u672c\u8f83\u4f4e\u7684\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\u3002\u5b83\u7528\u7b80\u5355\u7684\u6807\u8bb0\u8bed\u6cd5\u4ee3\u66ff\u6309\u94ae\uff0c\u56e0\u6b64\u80fd\u7701\u53bb\u9891\u7e41\u4f7f\u7528\u9f20\u6807\u8c03\u6574\u6392\u7248\u7684\u9ebb\u70e6\uff0c\u4e3a\u6587\u6863\u7f16\u5199\u8005\u63d0\u4f9b\u4fbf\u5229\u3002\u7528 Markdown \u7f16\u5199\u7684\u5185\u5bb9\u53ef\u5bfc\u51fa\u4e3a HTML\u3001Word\u3001PDF \u7b49\u591a\u79cd\u683c\u5f0f\u7684\u6587\u6863\u3002\u7531\u4e8e\u6613\u8bfb\u6613\u5199\uff0c\u5b83\u5728 GitHub\u3001\u7b80\u4e66\u7b49\u7f51\u7ad9\u4e0a\u4e5f\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 \u901a\u8fc7\u9605\u8bfb\u672c\u6587\u6863\uff0c\u8bfb\u8005\u53ef\u4ee5\u5728\u4e94\u5206\u949f\u5185\u5feb\u901f\u5b66\u4e60\u5230\u5e38\u7528\u7684 Markdown \u6807\u8bb0\u3002\u66f4\u591a\u7684\u5185\u5bb9\u8bf7\u79fb\u6b65\u83dc\u9e1f\u6559\u7a0b\u3002 \u5728\u5f00\u59cb\u5b66\u4e60 Markdown \u8bed\u6cd5\u4e4b\u524d\uff0c\u5efa\u8bae\u5148\u901a\u8fc7 Typora \u5b98\u7f51 \u5b89\u88c5\u597d Typora \u7f16\u8f91\u5668\u3002","title":"Markdown \u5165\u95e8"},{"location":"basic/md/#_1","text":"","title":"\u8bed\u6cd5"},{"location":"basic/md/#_2","text":"\u5171\u6709 1-6 \u7ea7\u6807\u9898\uff0c\u4f7f\u7528 # \u6807\u8bb0\u3002 # \u6570\u91cf\u4e0e\u6807\u9898\u7ea7\u522b\u5bf9\u5e94\u3002\u6ce8\u610f # \u4e0e\u6587\u5b57\u95f4\u7684\u7a7a\u683c\u4e0d\u53ef\u7701\u7565\u3002 #### \u56db\u7ea7\u6807\u9898 ##### \u4e94\u7ea7\u6807\u9898 ###### \u516d\u7ea7\u6807\u9898","title":"\u6807\u9898"},{"location":"basic/md/#_3","text":"","title":"\u56db\u7ea7\u6807\u9898"},{"location":"basic/md/#_4","text":"","title":"\u4e94\u7ea7\u6807\u9898"},{"location":"basic/md/#_5","text":"","title":"\u516d\u7ea7\u6807\u9898"},{"location":"basic/md/#_6","text":"*\u659c\u4f53* _\u659c\u4f53_ **\u7c97\u4f53** __\u7c97\u4f53__ ***\u7c97\u659c\u4f53*** ___\u7c97\u659c\u4f53___ ~~\u5220\u9664\u7ebf~~ <u>\u4e0b\u5212\u7ebf</u> \u659c\u4f53 \u659c\u4f53 \u7c97\u4f53 \u7c97\u4f53 \u7c97\u659c\u4f53 \u7c97\u659c\u4f53 \u5220\u9664\u7ebf \u4e0b\u5212\u7ebf","title":"\u5b57\u4f53"},{"location":"basic/md/#_7","text":"\u65e0\u5e8f\u5217\u8868\u7528 * \u6216 + \u6216 - \u6807\u8bc6\uff0c\u6709\u5e8f\u5217\u8868\u7528\u6570\u5b57\u548c . \u6765\u6807\u8bc6\uff0c\u652f\u6301\u5217\u8868\u5d4c\u5957\u3002 * \u7b2c\u4e00\u9879 + \u7b2c\u4e8c\u9879 - \u7b2c\u4e09\u9879 1. \u5b50\u9879\u4e00 1. \u5b59\u5b50\u9879\u4e00 * \u91cd\u5b59\u5b50\u9879\u4e00 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u5b50\u9879\u4e00 \u5b59\u5b50\u9879\u4e00 \u91cd\u5b59\u5b50\u9879\u4e00","title":"\u5217\u8868"},{"location":"basic/md/#_8","text":"> \u8fd9\u662f\u4e00\u6761\u65e0\u610f\u4e49\u7684\u5f15\u7528\u3002 \u8fd9\u662f\u4e00\u6761\u65e0\u610f\u4e49\u7684\u5f15\u7528\u3002","title":"\u5f15\u7528"},{"location":"basic/md/#_9","text":"\u52a0\u6cd5\u64cd\u4f5c\u7531 `add()` \u51fd\u6570\u5b8c\u6210 \u52a0\u6cd5\u64cd\u4f5c\u7531 add() \u51fd\u6570\u5b8c\u6210 ```Python def add ( a , b ): return a + b ``` def add ( a , b ): return a + b","title":"\u4ee3\u7801"},{"location":"basic/md/#_10","text":"[\u83dc\u9e1f\u6559\u7a0b](https://www.runoob.com/markdown/md-tutorial.html) <https://www.runoob.com/markdown/md-tutorial.html> \u83dc\u9e1f\u6559\u7a0b https://www.runoob.com/markdown/md-tutorial.html","title":"\u94fe\u63a5"},{"location":"basic/md/#_11","text":"\u63d2\u5165\u56fe\u7247\u9700\u4f9d\u7167 ![alt \u5c5e\u6027\u6587\u672c](\u56fe\u7247\u5730\u5740) \u683c\u5f0f\u3002\u6ce8\u610f\u4e0d\u8981\u4f7f\u7528\u672c\u5730\u8def\u5f84\uff0c\u53ef\u4ee5\u5c06\u56fe\u7247\u4e0a\u4f20\u5230\u6e05\u534e\u4e91\u76d8\u518d\u83b7\u53d6\u56fe\u7247\u94fe\u63a5\u3002 ![Typora \u5b98\u7f51\u5c55\u793a\u56fe](https://www.typora.io/img/new/inline.png)","title":"\u56fe\u7247"},{"location":"basic/md/#_12","text":"Markdown \u8fd8\u6709\u4e00\u4e9b\u9ad8\u7ea7\u73a9\u6cd5\uff0c\u4f8b\u5982\u8868\u683c\u3001\u516c\u5f0f\u3001HTML \u5143\u7d20\u3001\u753b\u65f6\u5e8f\u56fe\u3001\u753b\u6d41\u7a0b\u56fe\u7b49\u7b49\u3002\u7531\u4e8e\u4e0d\u662f\u5f88\u5e38\u7528\uff0c\u8fd9\u4e9b\u90fd\u7559\u7ed9\u6709\u5174\u8da3\u7684\u8bfb\u8005\u81ea\u884c\u63a2\u7d22\u3002 \u53cb\u60c5\u94fe\u63a5\uff1a \u83dc\u9e1f\u6559\u7a0b https://www.runoob.com/markdown/md-tutorial.html \u516c\u5f0f\u7f16\u8f91\u6559\u7a0b https://www.jianshu.com/p/25f0139637b7 \u7ed8\u5236\u6d41\u7a0b\u56fe\u3001\u65f6\u5e8f\u56fe\u3001\u7518\u7279\u56fe https://www.jianshu.com/p/6dbcc3aff98b","title":"\u5176\u4ed6"},{"location":"basic/search-engine/","text":"","title":"\u5982\u4f55\u4f7f\u7528\u641c\u7d22\u5f15\u64ce"},{"location":"basic/vscode/","text":"","title":"VSCode \u914d\u7f6e"},{"location":"frontend/react-easy/","text":"","title":"React \u6846\u67b6\u5165\u95e8"},{"location":"frontend/react-more/","text":"","title":"\u73b0\u4ee3 React \u6846\u67b6"},{"location":"languages/c-basic/","text":"","title":"C \u8bed\u8a00\u57fa\u7840"},{"location":"languages/javascript/","text":"","title":"JavaScript \u8bed\u8a00\u57fa\u7840"},{"location":"languages/modern-cpp/","text":"","title":"\u73b0\u4ee3 C++ \u8bed\u8a00"},{"location":"languages/python/","text":"Python \u8bed\u8a00\u57fa\u7840 \u00b6 \u5982\u4f55\u9ad8\u6548\u5730\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00 \u5f53\u6211\u4eec\u5728\u8bf4\u5b66\u4e60\u4e00\u95e8\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5230\u5e95\u5728\u8bf4\u4ec0\u4e48\uff1f C++, Java, Python, JavaScript, Typescript... \u4e00\u95e8\u53c8\u4e00\u95e8\u7684\u7f16\u7a0b\u8bed\u8a00\u540c\u4e2d\u6709\u5f02\uff0c\u5f02\u4e2d\u6709\u540c\u3002\u867d\u8bf4\u201c\u5b9e\u73b0\u76ee\u7684\u201d\u662f\u6211\u4eec\u5b66\u4e60\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u7684\u76f4\u63a5\u9a71\u52a8\u529b\uff0c\u53ef\u5982\u4f55\u9ad8\u6548\u5730\u638c\u63e1\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f7f\u5176\u4e3a\u6211\u6240\u7528\uff0c\u662f\u4e2a\u503c\u5f97\u6211\u4eec\u601d\u8003\u7684\u95ee\u9898\u3002 \u6216\u8bb8\u62bd\u8c61\u601d\u7ef4\u80fd\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6709\u4e00\u5b9a\u7684\u5e2e\u52a9\u3002\u4e5f\u8bb8\u4f60\u5df2\u7ecf\u5148\u4fee\u8fc7\u4e86\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u6216\u662f\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u7b49\u7b49\u8bfe\u7a0b\uff0c\u6211\u4eec\u4e0d\u59a8\u56de\u5fc6\u5728\u5165\u95e8\u7b2c\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u65f6\u7684\u6d41\u7a0b\u3002\u6211\u4eec\u90fd\u662f\u4ece\u6700\u57fa\u672c\u7684 \u5173\u952e\u8bcd \u5f00\u59cb\uff0c\u7136\u540e\u63a5\u89e6 \u8fd0\u884c\u63a7\u5236\u8bed\u53e5 \uff0c\u5982 \u987a\u5e8f\u8bed\u53e5\u3001\u6761\u4ef6\u8bed\u53e5\u548c\u5faa\u73af\u8bed\u53e5 \uff0c\u638c\u63e1\u7a0b\u5e8f\u6267\u884c\u7684\u5177\u4f53\u6d41\u7a0b\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u4e00\u4e9b \u6570\u636e\u7c7b\u578b \u4e0e\u8f83\u4e3a\u65b9\u4fbf\u7684 \u6570\u636e\u7ec4\u7ec7\u65b9\u5f0f \uff0c\u5982 C++ \u4e2d\u7684 \u6570\u7ec4 \uff0c \u7ed3\u6784\u4f53 \u7b49\u7b49\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u8981\u4e86\u89e3\u4f7f\u7528\u8fd9\u95e8\u7f16\u7a0b\u8bed\u8a00\u6240\u5177\u6709\u7684\u72ec\u7279\u7684\u4f18\u52bf\uff0c\u6bd4\u5982\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u7684 \u8bed\u6cd5\u7cd6 \uff0c\u6216\u662f\u4f7f\u7528\u8fd9\u95e8\u8bed\u8a00\u80fd\u8ba9\u6211\u4eec\u6781\u4e3a\u4fbf\u5229\u5730\u5b8c\u6210\u4ec0\u4e48\u529f\u80fd\u3002 \u4ec0\u4e48\u662f \u8bed\u6cd5\u7cd6 \uff1f \u8bed\u6cd5\u7cd6\uff08\u82f1\u8bed\uff1aSyntactic sugar\uff09\u662f\u7531\u82f1\u56fd\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u5f7c\u5f97\u00b7\u5170\u4e01\u53d1\u660e\u7684\u4e00\u4e2a\u672f\u8bed\uff0c\u6307\u8ba1\u7b97\u673a\u8bed\u8a00\u4e2d\u6dfb\u52a0\u7684\u67d0\u79cd\u8bed\u6cd5\uff0c\u8fd9\u79cd\u8bed\u6cd5\u5bf9\u8bed\u8a00\u7684\u529f\u80fd\u6ca1\u6709\u5f71\u54cd\uff0c\u4f46\u662f\u66f4\u65b9\u4fbf\u7a0b\u5e8f\u5458\u4f7f\u7528\u3002\u8bed\u6cd5\u7cd6\u8ba9\u7a0b\u5e8f\u66f4\u52a0\u7b80\u6d01\uff0c\u6709\u66f4\u9ad8\u7684\u53ef\u8bfb\u6027\u3002 Excerpted from Wikipedia, https://zh.wikipedia.org/wiki/%E8%AF%AD%E6%B3%95%E7%B3%96 , 2021-9-27. \u56e0\u6b64\uff0c\u6211\u4eec\u5728\u5b66\u4e60\u4e00\u95e8\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u65f6\uff0c\u4e0d\u59a8\u5c31\u4eff\u7167\u7740\u8fd9\u4e2a\u601d\u8def\uff0c\u4ece\u6700\u57fa\u672c\u7684 \u5173\u952e\u8bcd \u5165\u624b\uff0c\u7136\u540e\u662f\u7a0b\u5e8f\u7684 \u63a7\u5236\u8bed\u53e5 \uff0c\u8fdb\u800c\u662f \u6570\u636e\u7684\u7ec4\u7ec7 \uff0c\u6700\u540e\u53ef\u4ee5\u63a5\u89e6\u4e00\u4e9b \u8fd9\u95e8\u7f16\u7a0b\u8bed\u8a00\u7684\u4f18\u52bf\u4e4b\u5904 \u3002\u672c\u7bc7 Python \u6559\u7a0b\u4fbf\u4f1a\u6309\u7167\u4e0a\u8ff0\u7684\u601d\u8def\u6765\u7ec4\u7ec7\u5c55\u5f00\u3002 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u57fa\u672c\u7684\u4ee3\u6570\u601d\u7ef4 \u4e00\u5b9a\u7684\u903b\u8f91\u80fd\u529b \u5148\u4fee\u7a0b\u5e8f\u8bbe\u8ba1\u8bfe\u7a0b\u7684\u7a0b\u5e8f\u903b\u8f91\uff0c\u5bf9\u6570\u636e\u7ec4\u7ec7\u5f62\u5f0f\u7684\u4e00\u5b9a\u7406\u89e3\u548c\u4e00\u5b9a\u7684\u9762\u5411\u5bf9\u8c61\u601d\u60f3 Python \u53ef\u4ee5\u7528\u6765\u505a\u4ec0\u4e48 \u00b6 \u5f00\u53d1\u7f51\u9875\u524d\u7aef\u4e0e\u540e\u7aef \u5728\u6570\u636e\u7edf\u8ba1\u4e0e\u5206\u6790\u4e2d\u6781\u5177\u4f18\u52bf \u5728\u673a\u5668\u5b66\u4e60\u9886\u57df\u6709\u6781\u4e3a\u91cd\u8981\u7684\u4f5c\u7528 \u80f6\u6c34\u578b\u8bed\u8a00\uff0c\u7b80\u6d01\u7075\u6d3b \u5b89\u88c5\u4e0e Hello World \u00b6 Python \u7684\u5b89\u88c5 \u00b6 \u5148\u4ecb\u7ecd\u4e00\u4e0b\u5386\u53f2\u6e0a\u6e90\uff0c\u63a8\u8350\u5e9f 2 \u7528 3 \u8bf4\u4e00\u4e0b\u89e3\u91ca\u578b\u8bed\u8a00\u548c\u7f16\u8bd1\u578b\u8bed\u8a00\u7684\u533a\u522b \u8fd9\u91cc\u7ed9\u4e2a\u8be6\u7ec6\u7684\u5b89\u88c5\u6559\u7a0b\uff0c\u6478\u4e86 Hello world \u00b6 \u9e3d\u4e86 [Checkpoint Python-01] Hello World <- \u5927\u6982\u60f3\u505a\u6210\u4e00\u79cd \u6587\u6863\u4e2d\u4e0d\u80fd\u53ea\u6709\u6559\u7a0b \u5e26\u6709 Checkpoints \u548c Problems \u4e24\u79cd\u201c\u7ec3\u4e60\u9898\u201d\u7684\u6a21\u5f0f -> \u5176\u4e2d Checkpoints \u57fa\u672c\u4e0d\u9700\u8d39\u529b \u8ddf\u7740\u6587\u6863\u8d70\u5c31\u80fd\u5927\u81f4\u5b8c\u6210 \u7136\u540e Problems \u7684\u8bdd\u53ef\u80fd\u9700\u8981\u82b1\u4e0a\u51e0\u4e2a\u5c0f\u65f6\u624d\u80fd\u5b8c\u6210 \u662f\u7efc\u5408\u6027\u7684\u7ec3\u4e60 \u5f53\u7136\uff0c\u8fd9\u4e2a Checkpoint \u7684\u5185\u5bb9\u4e5f\u6478\u4e86\uff0c\u660e\u5929\u6982\u7edf\u8bfe\u518d\u8bf48 \u7a0b\u5e8f\u63a7\u5236\u8bed\u53e5 \u00b6 \u987a\u5e8f\u8bed\u53e5 \u00b6 \u987a\u5e8f\u6267\u884c\uff0c\u7f29\u8fdb\u4ee3\u8868\u7ed3\u6784... \u6ce8\u91ca\u600e\u4e48\u5199\uff0c# \u6216\u8005 ''' ''' \u6761\u4ef6\u8bed\u53e5 \u00b6 if / elif / else \u5faa\u73af\u8bed\u53e5 \u00b6 for \u7684\u8fed\u4ee3\u5668\u6a21\u5f0f \u51fd\u6570\u7684\u5199\u6cd5 \u00b6 def \u6570\u636e\u53ca\u5176\u7ec4\u7ec7\u5f62\u5f0f \u00b6 \u6570\u636e\u7c7b\u578b \u00b6 \u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u4ecb\u7ecd\u5f31\u7c7b\u578b\u8bed\u8a00 number, str \u6269\u5c55\u6570\u636e\u7c7b\u578b \u00b6 list \u00b6 tuple \u00b6 dict \u00b6 set \u00b6 \u9762\u5411\u5bf9\u8c61\u8bed\u6cd5 \u00b6 OS / \u6587\u4ef6\u8bfb\u5199 \u00b6 \u8fd9\u4e9b\u4eca\u5929\u665a\u4e0a\u5f53\u7136\u90fd\u6478\u4e86 \u8bed\u6cd5\u7cd6 \u00b6 generators, yield \u00b6 [Checkpoint Python-0X] Fibonacci [x[1:] for x in str_list] \u00b6 etc...\uff08\u53bb\u7ffb\u6691\u57f9\u8bb2\u4e49 \u00b6 \u5305\u7ba1\u7406\u5668 pip \u00b6 \u5b89\u88c5\u5176\u4ed6\u5305 \u4fbf\u4e8e\u4e4b\u540e\u5b66\u4e60 \u62d3\u5c55\u5b66\u4e60 \u00b6 TODO: \u627e\u94fe\u63a5 \u5f53\u7136\u6700\u597d\u662f\u5b8c\u5584\u4e00\u4e0b\u7ed9\u66f4\u52a0\u8be6\u7ec6\u7684\u6307\u5bfc \u7f51\u7ad9\u5f00\u53d1 \u00b6 Django Flask \u6570\u636e\u6536\u96c6 \u00b6 requests beautifulsoup4 \u7edf\u8ba1\u5206\u6790 \u00b6 Numpy Matplotlib pandas \u673a\u5668\u5b66\u4e60 \u00b6 Tensorflow Pytorch \u8d44\u6e90\u94fe\u63a5 \u00b6 Python Docs https://www.python.org/doc/ Runoob https://www.runoob.com/python3/python3-tutorial.html","title":"Python \u8bed\u8a00\u57fa\u7840"},{"location":"languages/python/#python","text":"\u5982\u4f55\u9ad8\u6548\u5730\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00 \u5f53\u6211\u4eec\u5728\u8bf4\u5b66\u4e60\u4e00\u95e8\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5230\u5e95\u5728\u8bf4\u4ec0\u4e48\uff1f C++, Java, Python, JavaScript, Typescript... \u4e00\u95e8\u53c8\u4e00\u95e8\u7684\u7f16\u7a0b\u8bed\u8a00\u540c\u4e2d\u6709\u5f02\uff0c\u5f02\u4e2d\u6709\u540c\u3002\u867d\u8bf4\u201c\u5b9e\u73b0\u76ee\u7684\u201d\u662f\u6211\u4eec\u5b66\u4e60\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u7684\u76f4\u63a5\u9a71\u52a8\u529b\uff0c\u53ef\u5982\u4f55\u9ad8\u6548\u5730\u638c\u63e1\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f7f\u5176\u4e3a\u6211\u6240\u7528\uff0c\u662f\u4e2a\u503c\u5f97\u6211\u4eec\u601d\u8003\u7684\u95ee\u9898\u3002 \u6216\u8bb8\u62bd\u8c61\u601d\u7ef4\u80fd\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6709\u4e00\u5b9a\u7684\u5e2e\u52a9\u3002\u4e5f\u8bb8\u4f60\u5df2\u7ecf\u5148\u4fee\u8fc7\u4e86\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u6216\u662f\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u7b49\u7b49\u8bfe\u7a0b\uff0c\u6211\u4eec\u4e0d\u59a8\u56de\u5fc6\u5728\u5165\u95e8\u7b2c\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u65f6\u7684\u6d41\u7a0b\u3002\u6211\u4eec\u90fd\u662f\u4ece\u6700\u57fa\u672c\u7684 \u5173\u952e\u8bcd \u5f00\u59cb\uff0c\u7136\u540e\u63a5\u89e6 \u8fd0\u884c\u63a7\u5236\u8bed\u53e5 \uff0c\u5982 \u987a\u5e8f\u8bed\u53e5\u3001\u6761\u4ef6\u8bed\u53e5\u548c\u5faa\u73af\u8bed\u53e5 \uff0c\u638c\u63e1\u7a0b\u5e8f\u6267\u884c\u7684\u5177\u4f53\u6d41\u7a0b\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u4e00\u4e9b \u6570\u636e\u7c7b\u578b \u4e0e\u8f83\u4e3a\u65b9\u4fbf\u7684 \u6570\u636e\u7ec4\u7ec7\u65b9\u5f0f \uff0c\u5982 C++ \u4e2d\u7684 \u6570\u7ec4 \uff0c \u7ed3\u6784\u4f53 \u7b49\u7b49\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u8981\u4e86\u89e3\u4f7f\u7528\u8fd9\u95e8\u7f16\u7a0b\u8bed\u8a00\u6240\u5177\u6709\u7684\u72ec\u7279\u7684\u4f18\u52bf\uff0c\u6bd4\u5982\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u7684 \u8bed\u6cd5\u7cd6 \uff0c\u6216\u662f\u4f7f\u7528\u8fd9\u95e8\u8bed\u8a00\u80fd\u8ba9\u6211\u4eec\u6781\u4e3a\u4fbf\u5229\u5730\u5b8c\u6210\u4ec0\u4e48\u529f\u80fd\u3002 \u4ec0\u4e48\u662f \u8bed\u6cd5\u7cd6 \uff1f \u8bed\u6cd5\u7cd6\uff08\u82f1\u8bed\uff1aSyntactic sugar\uff09\u662f\u7531\u82f1\u56fd\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u5f7c\u5f97\u00b7\u5170\u4e01\u53d1\u660e\u7684\u4e00\u4e2a\u672f\u8bed\uff0c\u6307\u8ba1\u7b97\u673a\u8bed\u8a00\u4e2d\u6dfb\u52a0\u7684\u67d0\u79cd\u8bed\u6cd5\uff0c\u8fd9\u79cd\u8bed\u6cd5\u5bf9\u8bed\u8a00\u7684\u529f\u80fd\u6ca1\u6709\u5f71\u54cd\uff0c\u4f46\u662f\u66f4\u65b9\u4fbf\u7a0b\u5e8f\u5458\u4f7f\u7528\u3002\u8bed\u6cd5\u7cd6\u8ba9\u7a0b\u5e8f\u66f4\u52a0\u7b80\u6d01\uff0c\u6709\u66f4\u9ad8\u7684\u53ef\u8bfb\u6027\u3002 Excerpted from Wikipedia, https://zh.wikipedia.org/wiki/%E8%AF%AD%E6%B3%95%E7%B3%96 , 2021-9-27. \u56e0\u6b64\uff0c\u6211\u4eec\u5728\u5b66\u4e60\u4e00\u95e8\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u65f6\uff0c\u4e0d\u59a8\u5c31\u4eff\u7167\u7740\u8fd9\u4e2a\u601d\u8def\uff0c\u4ece\u6700\u57fa\u672c\u7684 \u5173\u952e\u8bcd \u5165\u624b\uff0c\u7136\u540e\u662f\u7a0b\u5e8f\u7684 \u63a7\u5236\u8bed\u53e5 \uff0c\u8fdb\u800c\u662f \u6570\u636e\u7684\u7ec4\u7ec7 \uff0c\u6700\u540e\u53ef\u4ee5\u63a5\u89e6\u4e00\u4e9b \u8fd9\u95e8\u7f16\u7a0b\u8bed\u8a00\u7684\u4f18\u52bf\u4e4b\u5904 \u3002\u672c\u7bc7 Python \u6559\u7a0b\u4fbf\u4f1a\u6309\u7167\u4e0a\u8ff0\u7684\u601d\u8def\u6765\u7ec4\u7ec7\u5c55\u5f00\u3002","title":"Python \u8bed\u8a00\u57fa\u7840"},{"location":"languages/python/#_1","text":"\u57fa\u672c\u7684\u4ee3\u6570\u601d\u7ef4 \u4e00\u5b9a\u7684\u903b\u8f91\u80fd\u529b \u5148\u4fee\u7a0b\u5e8f\u8bbe\u8ba1\u8bfe\u7a0b\u7684\u7a0b\u5e8f\u903b\u8f91\uff0c\u5bf9\u6570\u636e\u7ec4\u7ec7\u5f62\u5f0f\u7684\u4e00\u5b9a\u7406\u89e3\u548c\u4e00\u5b9a\u7684\u9762\u5411\u5bf9\u8c61\u601d\u60f3","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"languages/python/#python_1","text":"\u5f00\u53d1\u7f51\u9875\u524d\u7aef\u4e0e\u540e\u7aef \u5728\u6570\u636e\u7edf\u8ba1\u4e0e\u5206\u6790\u4e2d\u6781\u5177\u4f18\u52bf \u5728\u673a\u5668\u5b66\u4e60\u9886\u57df\u6709\u6781\u4e3a\u91cd\u8981\u7684\u4f5c\u7528 \u80f6\u6c34\u578b\u8bed\u8a00\uff0c\u7b80\u6d01\u7075\u6d3b","title":"Python \u53ef\u4ee5\u7528\u6765\u505a\u4ec0\u4e48"},{"location":"languages/python/#hello-world","text":"","title":"\u5b89\u88c5\u4e0e Hello World"},{"location":"languages/python/#python_2","text":"\u5148\u4ecb\u7ecd\u4e00\u4e0b\u5386\u53f2\u6e0a\u6e90\uff0c\u63a8\u8350\u5e9f 2 \u7528 3 \u8bf4\u4e00\u4e0b\u89e3\u91ca\u578b\u8bed\u8a00\u548c\u7f16\u8bd1\u578b\u8bed\u8a00\u7684\u533a\u522b \u8fd9\u91cc\u7ed9\u4e2a\u8be6\u7ec6\u7684\u5b89\u88c5\u6559\u7a0b\uff0c\u6478\u4e86","title":"Python \u7684\u5b89\u88c5"},{"location":"languages/python/#hello-world_1","text":"\u9e3d\u4e86 [Checkpoint Python-01] Hello World <- \u5927\u6982\u60f3\u505a\u6210\u4e00\u79cd \u6587\u6863\u4e2d\u4e0d\u80fd\u53ea\u6709\u6559\u7a0b \u5e26\u6709 Checkpoints \u548c Problems \u4e24\u79cd\u201c\u7ec3\u4e60\u9898\u201d\u7684\u6a21\u5f0f -> \u5176\u4e2d Checkpoints \u57fa\u672c\u4e0d\u9700\u8d39\u529b \u8ddf\u7740\u6587\u6863\u8d70\u5c31\u80fd\u5927\u81f4\u5b8c\u6210 \u7136\u540e Problems \u7684\u8bdd\u53ef\u80fd\u9700\u8981\u82b1\u4e0a\u51e0\u4e2a\u5c0f\u65f6\u624d\u80fd\u5b8c\u6210 \u662f\u7efc\u5408\u6027\u7684\u7ec3\u4e60 \u5f53\u7136\uff0c\u8fd9\u4e2a Checkpoint \u7684\u5185\u5bb9\u4e5f\u6478\u4e86\uff0c\u660e\u5929\u6982\u7edf\u8bfe\u518d\u8bf48","title":"Hello world"},{"location":"languages/python/#_2","text":"","title":"\u7a0b\u5e8f\u63a7\u5236\u8bed\u53e5"},{"location":"languages/python/#_3","text":"\u987a\u5e8f\u6267\u884c\uff0c\u7f29\u8fdb\u4ee3\u8868\u7ed3\u6784... \u6ce8\u91ca\u600e\u4e48\u5199\uff0c# \u6216\u8005 ''' '''","title":"\u987a\u5e8f\u8bed\u53e5"},{"location":"languages/python/#_4","text":"if / elif / else","title":"\u6761\u4ef6\u8bed\u53e5"},{"location":"languages/python/#_5","text":"for \u7684\u8fed\u4ee3\u5668\u6a21\u5f0f","title":"\u5faa\u73af\u8bed\u53e5"},{"location":"languages/python/#_6","text":"def","title":"\u51fd\u6570\u7684\u5199\u6cd5"},{"location":"languages/python/#_7","text":"","title":"\u6570\u636e\u53ca\u5176\u7ec4\u7ec7\u5f62\u5f0f"},{"location":"languages/python/#_8","text":"\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u4ecb\u7ecd\u5f31\u7c7b\u578b\u8bed\u8a00 number, str","title":"\u6570\u636e\u7c7b\u578b"},{"location":"languages/python/#_9","text":"","title":"\u6269\u5c55\u6570\u636e\u7c7b\u578b"},{"location":"languages/python/#list","text":"","title":"list"},{"location":"languages/python/#tuple","text":"","title":"tuple"},{"location":"languages/python/#dict","text":"","title":"dict"},{"location":"languages/python/#set","text":"","title":"set"},{"location":"languages/python/#_10","text":"","title":"\u9762\u5411\u5bf9\u8c61\u8bed\u6cd5"},{"location":"languages/python/#os","text":"\u8fd9\u4e9b\u4eca\u5929\u665a\u4e0a\u5f53\u7136\u90fd\u6478\u4e86","title":"OS / \u6587\u4ef6\u8bfb\u5199"},{"location":"languages/python/#_11","text":"","title":"\u8bed\u6cd5\u7cd6"},{"location":"languages/python/#generators-yield","text":"[Checkpoint Python-0X] Fibonacci","title":"generators, yield"},{"location":"languages/python/#x1-for-x-in-str_list","text":"","title":"[x[1:] for x in str_list]"},{"location":"languages/python/#etc","text":"","title":"etc...\uff08\u53bb\u7ffb\u6691\u57f9\u8bb2\u4e49"},{"location":"languages/python/#pip","text":"\u5b89\u88c5\u5176\u4ed6\u5305 \u4fbf\u4e8e\u4e4b\u540e\u5b66\u4e60","title":"\u5305\u7ba1\u7406\u5668 pip"},{"location":"languages/python/#_12","text":"TODO: \u627e\u94fe\u63a5 \u5f53\u7136\u6700\u597d\u662f\u5b8c\u5584\u4e00\u4e0b\u7ed9\u66f4\u52a0\u8be6\u7ec6\u7684\u6307\u5bfc","title":"\u62d3\u5c55\u5b66\u4e60"},{"location":"languages/python/#_13","text":"Django Flask","title":"\u7f51\u7ad9\u5f00\u53d1"},{"location":"languages/python/#_14","text":"requests beautifulsoup4","title":"\u6570\u636e\u6536\u96c6"},{"location":"languages/python/#_15","text":"Numpy Matplotlib pandas","title":"\u7edf\u8ba1\u5206\u6790"},{"location":"languages/python/#_16","text":"Tensorflow Pytorch","title":"\u673a\u5668\u5b66\u4e60"},{"location":"languages/python/#_17","text":"Python Docs https://www.python.org/doc/ Runoob https://www.runoob.com/python3/python3-tutorial.html","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"languages/rust/","text":"","title":"Rust \u8bed\u8a00\u57fa\u7840"},{"location":"languages/typescript/","text":"TypeScript \u8bed\u8a00\u57fa\u7840 \u00b6 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u5177\u6709 JavaScript \u8bed\u8a00\u57fa\u7840\uff0c\u80fd\u591f\u7f16\u5199\u7b80\u5355\u7684 JavaScript \u8bed\u8a00\u7a0b\u5e8f \u5177\u6709\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u7840\uff0c\u80fd\u591f\u7406\u89e3\u7c7b\u5c01\u88c5\u548c\u65b9\u6cd5\u91cd\u5199\uff08\u8bed\u8a00\u6700\u597d\u662f C++\uff09 \u7b80\u5355\u7684\u7c7b\u578b\u6807\u6ce8 \u00b6 TypeScript \u6700\u5927\u7684\u7279\u70b9\u5c31\u662f\u5f15\u5165\u4e86\u7c7b\u578b\u7cfb\u7edf\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u7f16\u8bd1\u4e3a JavaScript \u4ee3\u7801\u4e4b\u524d\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u3002\u5728\u8fd9\u6837\u7684\u6761\u4ef6\u4e0b\uff0cTypeScript \u4e2d\u7684\u53d8\u91cf\u5728\u58f0\u660e\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u6307\u5b9a\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u5728\u5c06 TypeScript \u4ee3\u7801\u7f16\u8bd1\u4e3a JavaScript \u4ee3\u7801\u7684\u65f6\u5019\u4f1a\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u82e5\u6709\u4e0d\u7b26\u5408\u7c7b\u578b\u58f0\u660e\u7684\u60c5\u51b5\u5219\u4f1a\u62a5\u9519\uff1a const foo = ( name : string ) : void => { console . log ( \"Hello, \" + name ); } foo ( 2 ); // Error! \u7531\u4e8e TypeScript \u662f JavaScript \u7684\u8d85\u96c6\uff0c\u6240\u4ee5\u5176\u57fa\u7840\u53d8\u91cf\u7c7b\u578b\u4f9d\u7136\u548c JavaScript \u4e00\u81f4\u3002\u5e38\u7528\u7684\u57fa\u7840\u7c7b\u578b\u5305\u62ec\uff1a let isDone : boolean = false ; let clickCnt : number = 6 ; let greeting : string = \"Hello!\" ; \u6570\u7ec4\u7c7b\u578b\u6309\u7167\u4e0b\u9762\u7684\u4ee3\u7801\u58f0\u660e\uff1a let list : number [] = [ 1 , 2 , 3 , 4 , 5 ]; \u5bf9\u4e8e\u65e0\u6cd5\u660e\u786e\u786e\u5b9a\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u58f0\u660e\u4e3a any \u7c7b\u578b\uff1a let notSure : any = 1 ; notSure = \"Maybe it is a string\" ; // OK \u6ce8\u610f\u53ef\u80fd\u7684 any \u7c7b\u578b\u6ee5\u7528 any \u7c7b\u578b\u662f\u76ee\u524d TypeScript \u8bed\u8a00\u4e4b\u4e2d\u5177\u6709\u8f83\u5927\u4e89\u8bae\u7684\u4e00\u4e2a\u8bbe\u8ba1\uff0c\u56e0\u4e3a\u7406\u8bba\u4e0a\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u7684\u53d8\u91cf\u58f0\u660e\u4e3a any \u4ece\u800c\u7ed5\u8fc7\u7c7b\u578b\u68c0\u67e5\uff0c\u8fd9\u4e2a\u65f6\u5019 TypeScript \u5b9e\u9645\u4e0a\u9000\u5316\u4e3a JavaScript \u3002 \u4f46\u662f\u8003\u8651\u5230\u76ee\u524d Web \u524d\u7aef\u9879\u76ee\u4f1a\u5f15\u7528\u5927\u91cf\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u5f00\u53d1\u8005\u5f88\u591a\u65f6\u5019\u65e0\u6cd5\u5b8c\u5168\u628a\u63e1\u67d0\u4e9b\u53d8\u91cf\u7684\u4fe1\u606f\uff0c\u6240\u4ee5 any \u7c7b\u578b\u662f\u5fc5\u8981\u7684\u3002\u4e0d\u8fc7\u6211\u4eec\u9700\u8981\u6ce8\u610f\u5176\u4f7f\u7528\uff0c\u5bf9\u4e8e\u80fd\u591f\u7ed9\u5b9a\u7c7b\u578b\u7684\u53d8\u91cf\u5219\u5c3d\u91cf\u4e0d\u6807\u8bb0\u4e3a any \u3002 \u9488\u5bf9\u8fd9\u4e00\u70b9\uff0c\u90e8\u5206\u4ee3\u7801\u68c0\u67e5\u5de5\u5177\u5df2\u7ecf\u5b9e\u88c5\u4e86\u68c0\u67e5\u201c\u53ef\u7591 any \u201d\u7684\u529f\u80fd\u3002 \u66f4\u4e3a\u590d\u6742\u7684\u7c7b\u578b\u53ef\u4ee5\u5305\u62ec\uff1a // Detailed object let obj : { name : string , age : number , address : string } = { name : \"qiubao\" , age : 57 , address : \"Tsinghua\" }; // Detailed array let arr : [ number , boolean ] = [ 1 , false ]; \u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6807\u6ce8\u5982\u4e0b\uff1a function sum ( x : number , y : number ) : number { return x + y ; } \u53e6\u5916\uff0c\u5982\u679c\u4f60\u8ba4\u4e3a\u4f60\u5bf9\u67d0\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\u5df2\u7ecf\u505a\u4e86\u5145\u5206\u7684\u68c0\u67e5\uff0c\u8ba4\u4e3a\u4e0d\u9700\u8981\u7f16\u8bd1\u5668\u68c0\u67e5\u5176\u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u8fdb\u884c \u7c7b\u578b\u65ad\u8a00 \uff1a let val : any = \"A string\" ; let stringLen : number = ( val as string ). length ; \u7b2c\u4e8c\u53e5\u7684\u542b\u4e49\u5c31\u662f\u65ad\u8a00 val \u53d8\u91cf\u4e00\u5b9a\u662f\u5b57\u7b26\u4e32\u3002 \u8054\u5408\u7c7b\u578b\u548c\u7c7b\u578b\u6536\u7a84 \u00b6 TyepScript \u652f\u6301\u5c06\u53d8\u91cf\u58f0\u660e\u4e3a\u82e5\u5e72\u4e2a\u7c7b\u578b\u4e4b\u4e2d\u7684\u4e00\u79cd\uff0c\u8fd9\u4e00\u822c\u79f0\u4e3a\u8054\u5408\u7c7b\u578b\uff08\u82f1\u8bed\uff1aUnion type\uff09\u3002\u58f0\u660e\u8054\u5408\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u591a\u4e2a\u7c7b\u578b\u4e4b\u95f4\u4f7f\u7528 | \u9694\u5f00\uff1a let union : number | string = 7 ; union = \"string\" ; // OK \u8054\u5408\u7c7b\u578b\u6700\u5e38\u7528\u7684\u5730\u65b9\u662f\u6807\u6ce8\u51fd\u6570\u53c2\u6570\uff0c\u8fd9\u6837\u5c31\u5141\u8bb8\u4e86\u51fd\u6570\u63a5\u53d7\u591a\u79cd\u7c7b\u578b\u7684\u53c2\u6570\uff1a const addPrefix = ( x : number | string ) : void => { console . log ( \"Prefix \" + x ); }; addPrefix ( 1 ); // OK addPrefix ( \"String\" ); // OK \u4f46\u662f\u8981\u6ce8\u610f\uff0c\u5728\u8fd9\u79cd\u51fd\u6570\u4e4b\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u8c03\u7528\u88ab\u58f0\u660e\u4e3a\u8054\u5408\u7c7b\u578b\u7684\u53d8\u91cf\u7684\u5c5e\u6027\u7684\u65f6\u5019\uff0c \u53ea\u80fd\u8c03\u7528\u8fd9\u4e9b\u7c7b\u578b\u6240\u5171\u6709\u7684\u5c5e\u6027 \u3002\u6bd4\u5982\u8bf4\uff1a const foo = ( x : number | string ) => { let y : number = x . length ; }; // Error! \u539f\u56e0\u662f\u7f16\u8bd1\u5668\u5e76\u4e0d\u80fd\u6e05\u695a\u6b64\u5904\u7684\u53d8\u91cf\u7684\u5177\u4f53\u7c7b\u578b\u3002\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u6761\u4ef6\u5206\u652f\u5c06\u8fd9\u4e9b\u7c7b\u578b\u5206\u79bb\u5f00\u6765\uff1a const print = ( x : number | string ) : void => { if ( typeof x === \"string\" ) { console . log ( \"[string] \" + x ); return ; } // TAG }; \u7f16\u8bd1\u5668\u5b9e\u9645\u4e0a\u5c31\u5df2\u7ecf\u660e\u767d\u5728 if \u5206\u652f\u4e4b\u540e\u7684 // TAG \u90e8\u5206 x \u53ea\u6709\u53ef\u80fd\u662f number \u7c7b\u578b\uff0c\u4ece\u800c\u5c31\u53ef\u4ee5\u65ad\u5b9a\u5c5e\u6027\u8c03\u7528\u662f\u5426\u7b26\u5408\u7c7b\u578b\u6807\u6ce8\u3002\u8fd9\u88ab\u79f0\u4e3a\u7c7b\u578b\u6536\u7a84\uff08\u82f1\u8bed\uff1aType narrowing\uff09\u3002 \u8054\u5408\u7c7b\u578b\u5b9e\u73b0\u679a\u4e3e\u7c7b\u578b TypeScript \u7684\u7c7b\u578b\u7cfb\u7edf\u5b9e\u9645\u4e0a\u8fd8\u652f\u6301\u5982\u4e0b\u8fd9\u79cd\u7c7b\u578b\u6807\u6ce8\uff1a let a : 1 ; a = 1 ; // OK a = 2 ; // Error! \u5176\u5141\u8bb8\u6211\u4eec\u5c06\u6570\u5b57\u6216\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u4f5c\u4e3a\u7c7b\u578b\u7684\u4e00\u79cd\uff0c\u8fd9\u79cd\u6027\u8d28\u548c\u8054\u5408\u7c7b\u578b\u4e00\u5e76\u4f7f\u7528\u7684\u6548\u679c\u5c31\u7c7b\u4f3c\u4e8e\u679a\u4e3e\uff1a type TwoPowers = 1 | 2 | 4 | 8 | 16 ; let a : TwoPowers = 2 ; // OK let b : TwoPowers = 5 ; // Error! never \u7c7b\u578b\u4e0e\u8017\u5c3d\u68c0\u67e5 TypeScript \u8bed\u8a00\u652f\u6301\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u578b\uff0c\u5373 never \u7c7b\u578b\u3002\u8fd9\u79cd\u7c7b\u578b\u5e38\u88ab\u7528\u4e8e\u6807\u6ce8\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u4ee3\u8868\u8fd9\u4e2a\u51fd\u6570\u6c38\u8fdc\u4e0d\u4f1a\u7ec8\u7ed3\u6216\u8005\u4f1a\u629b\u51fa\u5f02\u5e38\uff1a const neverEnd = () : never => { while ( true ) {} }; \u8fd9\u4e2a\u6027\u8d28\u5c31\u4f7f\u5f97 \u4efb\u4f55\u53d8\u91cf\u5747\u4e0d\u53ef\u80fd\u662f never \u7c7b\u578b \uff0c\u5229\u7528\u8fd9\u4e2a\u7279\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u6d4b \u7a0b\u5e8f\u662f\u5426\u8003\u8651\u4e86\u6240\u6709\u7684\u60c5\u51b5 \uff0c\u8fd9\u88ab\u79f0\u4e3a\u8017\u5c3d\u68c0\u67e5\uff08\u82f1\u8bed\uff1aExhaustive check\uff09\u3002 \u4f8b\u5982\u6211\u4eec\u9700\u8981\u7f16\u5199\u51fd\u6570\u5904\u7406\u8054\u5408\u7c7b\u578b number | string | boolean \uff0c\u5176\u4ee3\u7801\u53ef\u80fd\u4e3a\uff1a type All = number | string | boolean ; const handle = ( x : All ) : void => { switch ( typeof x ) { case \"number\" : // DO SOMETHING break ; case \"string\" : // DO SOMETHING break ; case \"boolean\" : // DO SOMETHING break ; default : let exhaustiveCheck : never = x ; break ; } }; \u7406\u8bba\u4e0a default \u5206\u652f\u4e4b\u4e2d\u7684\u4ee3\u7801\u53ea\u8981\u6267\u884c\u5c31\u5fc5\u7136\u62a5\u9519\uff0c\u6240\u4ee5\u8bf4\u5982\u679c\u6240\u6709\u7684 case \u5206\u652f\u7a77\u5c3d\u4e86\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u5c31\u4e0d\u4f1a\u89e6\u53d1\u9519\u8bef\u3002\u800c\u5982\u679c\u67d0\u65e5 All \u7c7b\u578b\u6dfb\u52a0\u4e86\u65b0\u7684\u53ef\u80fd\u7c7b\u578b\uff1a type All = number | string | boolean | Foo ; \u90a3\u4e48 handle \u51fd\u6570\u5c31\u6709\u53ef\u80fd\u56e0\u4e3a\u6ca1\u6709\u8017\u5c3d\u6240\u6709\u53ef\u80fd\u800c\u62a5\u9519\uff0c\u63d0\u9192\u5f00\u53d1\u8005\u9700\u8981\u66f4\u65b0\u8fd9\u4e2a\u51fd\u6570\u3002\u8fd9\u79cd\u5904\u7406\u65b9\u5f0f\u7c7b\u4f3c\u4e8e C++ \u7a0b\u5e8f\u5728\u4e0d\u53ef\u80fd\u7684\u5206\u652f\u4e0a\u52a0\u5165 assert(false) \u8fdb\u884c\u68c0\u6d4b\u3002 \u7c7b\u4e0e\u63a5\u53e3 \u00b6 TypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u7c7b\u4f3c\u4e8e ES6 \u6807\u51c6\u4e2d JavaScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\uff0c\u6545\u6b64\u5904\u4ec5\u7ed9\u51fa\u6837\u4f8b\u7a0b\u5e8f\u800c\u4e0d\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cTypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u5141\u8bb8\u58f0\u660e\u7c7b\u6210\u5458\u548c\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650\u3002\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u590d\u6570\u7c7b\u7684\u4ee3\u7801\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u7c7b\u6210\u5458\u58f0\u660e\u3001\u7c7b\u65b9\u6cd5\u7f16\u5199\u3001\u6784\u9020\u51fd\u6570\u7b49\u57fa\u7840\u5185\u5bb9\uff1a class Complex { private real : number ; private imaginary : number ; constructor ( _real : number , _imaginary : number ) { this . real = _real ; this . imaginary = _imaginary ; } public print () : void { console . log ( ` ${ this . real } ${ this . imaginary >= 0 ? \"+\" : \"-\" } ${ Math . abs ( this . imaginary ) } i` ); } } let z : Complex = new Complex ( 2 , 3 ); z . print (); \u7c7b\u7ee7\u627f\u4f7f\u7528\u5173\u952e\u5b57 extends \uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u5fc5\u987b \u624b\u52a8\u4f7f\u7528 super \u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570\uff08\u5426\u5219\u65e0\u6cd5\u4f7f\u7528 this \u53d8\u91cf\uff09\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u88ab\u91cd\u5199\u7684\u7236\u7c7b\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 super \u5173\u952e\u5b57\u8c03\u7528\uff1a class Animal { private name : string ; constructor ( _name : string ) { this . name = _name ; } public move () : void { console . log ( \"Animal moves\" ); } } class Cat extends Animal { private furColor : string ; constructor ( _name : string , _color : string ) { super ( _name ); // Must call super() here! this . furColor = _color ; } public move () : void { console . log ( \"Cat runs\" ); } public baseMove () : void { super . move (); } } let tom : Cat = new Cat ( \"tom\" , \"blue\" ); tom . move (); tom . baseMove (); \u62bd\u8c61\u7c7b\u4f9d\u7136\u662f\u5b58\u5728\u7684\uff0c\u4f46\u5728\u5b9e\u9645\u5de5\u7a0b\u4e2d\u66f4\u5e38\u7528\u7684\u662f \u63a5\u53e3 \u3002\u56e0\u4e3a\u62bd\u8c61\u7c7b\u5b9e\u9645\u4e0a\u89c4\u5b9a\u4e86\u4e00\u4e2a\u5bf9\u8c61\u5e94\u5f53\u5177\u6709\u7684\u6210\u5458\u548c\u5bf9\u5916\u5f00\u653e\u7684\u63a5\u53e3\u683c\u5f0f\u3002 \u62bd\u8c61\u7c7b\u548c\u63a5\u53e3 \u6211\u4eec\u56de\u60f3\u5728 C++ \u8bed\u8a00\u4e4b\u4e2d\u7684\u62bd\u8c61\u7c7b\uff1a class Base { protected : int val ; public : virtual void print () = 0 ; }; class Derive : public Base { public : virtual void print () override { std :: cout << this -> val << std :: endl ; } }; \u4e8b\u5b9e\u4e0a\uff0c Base \u7c7b\u7684\u4f5c\u7528\u5c31\u662f \u7ea6\u675f\u5b50\u7c7b\u5fc5\u987b\u5177\u6709 val \u6210\u5458 \u548c \u7ea6\u675f\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199 print \u865a\u65b9\u6cd5 \uff0c\u524d\u8005\u89c4\u5b9a\u4e86\u5b50\u7c7b\u5fc5\u987b\u5177\u6709\u7684\u6210\u5458\uff0c\u540e\u8005\u89c4\u5b9a\u4e86\u5b50\u7c7b\u9700\u8981\u8bbe\u8ba1\u7684\u63a5\u53e3\u683c\u5f0f\uff08\u63a5\u53e3\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\u7c7b\u578b\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u62bd\u8c61\u7236\u7c7b\u7684\u4f5c\u7528\u662f\u7ea6\u675f\u5b50\u7c7b\u5e94\u5f53\u5177\u6709\u7684\u6210\u5458\u548c\u5bf9\u5916\u5f00\u653e\u7684\u63a5\u53e3\u683c\u5f0f\u3002\u5728\u8fd9\u4e2a\u610f\u4e49\u4e0a\uff0c\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u662f\u4e00\u81f4\u7684\u3002 TypeScript \u8bed\u8a00\u4e4b\u4e2d\u63a5\u53e3\u7684\u5b9a\u4e49\u4e3a\uff1a interface Point { x : number ; y : number ; print : () => void ; } \u4e4b\u540e\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u53bb\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c\u8fd9\u4e2a\u65f6\u5019\u8fd9\u4e2a\u7c7b\u5c31\u5fc5\u987b\u5177\u6709\u63a5\u53e3\u7684\u6210\u5458\u5e76\u5b9e\u73b0\u63a5\u53e3\u7684\u65b9\u6cd5\uff1a class Point3D implements Point { x : number ; y : number ; z : number ; ... print () : void { console . log ( `( ${ this . x } , ${ this . y } , ${ this . z } )` ); } ... } \u63a5\u53e3\u652f\u6301 \u53ef\u9009\u53c2\u6570 \u548c \u53ea\u8bfb\u53c2\u6570 \u3002\u53ef\u9009\u53c2\u6570\u4ee3\u8868\u8be5\u53c2\u6570\u53ef\u5177\u6709\u53ef\u4e0d\u5177\u6709\uff1a interface Point { x : number ; y : number ; z? : number ; } let twoDimensionPoint : Point = { x : 1 , y : 2 }; // OK \u53ea\u8bfb\u53c2\u6570\u4ee3\u8868\u8be5\u53c2\u6570\u53ea\u53ef\u8bfb\u53d6\u4e0d\u53ef\u4fee\u6539\uff1a interface User { name : string ; readonly password : string ; } let holder : User = { name : \"holder\" , password : \"111111\" }; holder . password = \"222222\" ; // Error! \u540e\u7eed\u62d3\u5c55 \u00b6 TypeScript \u4f5c\u4e3a\u76ee\u524d\u8f83\u4e3a\u70ed\u95e8\u7684 JavaScript \u8bed\u8a00\u201c\u8865\u4e01\u201d\uff0c\u53ef\u4ee5\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5404\u79cd Web \u524d\u7aef\u6846\u67b6\u6216\u8005\u79fb\u52a8\u7aef\u6846\u67b6\u3002\u76ee\u524d\u7c7b\u4f3c React\u3001React Native\u3001Vue \u7b49\u5e38\u7528\u524d\u7aef\u6846\u67b6\u5747\u63d0\u4f9b\u4e86 TypeScript \u8bed\u8a00\u652f\u6301\u3002 \u540e\u7eed\u53ef\u4ee5\u9605\u8bfb\u7684\u6587\u6863\u6709\uff1a React \u6846\u67b6\u5165\u95e8 https://sast-skill-docers.github.io/sast-skill-docs/frontend/react-easy \u73b0\u4ee3 React \u6846\u67b6 https://sast-skill-docers.github.io/sast-skill-docs/frontend/react-more \u53ef\u4ee5\u5e94\u7528 TypeScript \u8bed\u8a00\u76f8\u5173\u77e5\u8bc6\u7684\u8bfe\u7a0b\uff1a \u8f6f\u4ef6\u5de5\u7a0b \u8d44\u6e90\u94fe\u63a5 \u00b6 TypeScript \u8bed\u8a00\u5b98\u65b9\u6587\u6863 https://www.tslang.cn/docs/home.html","title":"TypeScript \u8bed\u8a00\u57fa\u7840"},{"location":"languages/typescript/#typescript","text":"","title":"TypeScript \u8bed\u8a00\u57fa\u7840"},{"location":"languages/typescript/#_1","text":"\u5177\u6709 JavaScript \u8bed\u8a00\u57fa\u7840\uff0c\u80fd\u591f\u7f16\u5199\u7b80\u5355\u7684 JavaScript \u8bed\u8a00\u7a0b\u5e8f \u5177\u6709\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u7840\uff0c\u80fd\u591f\u7406\u89e3\u7c7b\u5c01\u88c5\u548c\u65b9\u6cd5\u91cd\u5199\uff08\u8bed\u8a00\u6700\u597d\u662f C++\uff09","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"languages/typescript/#_2","text":"TypeScript \u6700\u5927\u7684\u7279\u70b9\u5c31\u662f\u5f15\u5165\u4e86\u7c7b\u578b\u7cfb\u7edf\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u7f16\u8bd1\u4e3a JavaScript \u4ee3\u7801\u4e4b\u524d\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u3002\u5728\u8fd9\u6837\u7684\u6761\u4ef6\u4e0b\uff0cTypeScript \u4e2d\u7684\u53d8\u91cf\u5728\u58f0\u660e\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u6307\u5b9a\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u5728\u5c06 TypeScript \u4ee3\u7801\u7f16\u8bd1\u4e3a JavaScript \u4ee3\u7801\u7684\u65f6\u5019\u4f1a\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u82e5\u6709\u4e0d\u7b26\u5408\u7c7b\u578b\u58f0\u660e\u7684\u60c5\u51b5\u5219\u4f1a\u62a5\u9519\uff1a const foo = ( name : string ) : void => { console . log ( \"Hello, \" + name ); } foo ( 2 ); // Error! \u7531\u4e8e TypeScript \u662f JavaScript \u7684\u8d85\u96c6\uff0c\u6240\u4ee5\u5176\u57fa\u7840\u53d8\u91cf\u7c7b\u578b\u4f9d\u7136\u548c JavaScript \u4e00\u81f4\u3002\u5e38\u7528\u7684\u57fa\u7840\u7c7b\u578b\u5305\u62ec\uff1a let isDone : boolean = false ; let clickCnt : number = 6 ; let greeting : string = \"Hello!\" ; \u6570\u7ec4\u7c7b\u578b\u6309\u7167\u4e0b\u9762\u7684\u4ee3\u7801\u58f0\u660e\uff1a let list : number [] = [ 1 , 2 , 3 , 4 , 5 ]; \u5bf9\u4e8e\u65e0\u6cd5\u660e\u786e\u786e\u5b9a\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u58f0\u660e\u4e3a any \u7c7b\u578b\uff1a let notSure : any = 1 ; notSure = \"Maybe it is a string\" ; // OK \u6ce8\u610f\u53ef\u80fd\u7684 any \u7c7b\u578b\u6ee5\u7528 any \u7c7b\u578b\u662f\u76ee\u524d TypeScript \u8bed\u8a00\u4e4b\u4e2d\u5177\u6709\u8f83\u5927\u4e89\u8bae\u7684\u4e00\u4e2a\u8bbe\u8ba1\uff0c\u56e0\u4e3a\u7406\u8bba\u4e0a\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u7684\u53d8\u91cf\u58f0\u660e\u4e3a any \u4ece\u800c\u7ed5\u8fc7\u7c7b\u578b\u68c0\u67e5\uff0c\u8fd9\u4e2a\u65f6\u5019 TypeScript \u5b9e\u9645\u4e0a\u9000\u5316\u4e3a JavaScript \u3002 \u4f46\u662f\u8003\u8651\u5230\u76ee\u524d Web \u524d\u7aef\u9879\u76ee\u4f1a\u5f15\u7528\u5927\u91cf\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u5f00\u53d1\u8005\u5f88\u591a\u65f6\u5019\u65e0\u6cd5\u5b8c\u5168\u628a\u63e1\u67d0\u4e9b\u53d8\u91cf\u7684\u4fe1\u606f\uff0c\u6240\u4ee5 any \u7c7b\u578b\u662f\u5fc5\u8981\u7684\u3002\u4e0d\u8fc7\u6211\u4eec\u9700\u8981\u6ce8\u610f\u5176\u4f7f\u7528\uff0c\u5bf9\u4e8e\u80fd\u591f\u7ed9\u5b9a\u7c7b\u578b\u7684\u53d8\u91cf\u5219\u5c3d\u91cf\u4e0d\u6807\u8bb0\u4e3a any \u3002 \u9488\u5bf9\u8fd9\u4e00\u70b9\uff0c\u90e8\u5206\u4ee3\u7801\u68c0\u67e5\u5de5\u5177\u5df2\u7ecf\u5b9e\u88c5\u4e86\u68c0\u67e5\u201c\u53ef\u7591 any \u201d\u7684\u529f\u80fd\u3002 \u66f4\u4e3a\u590d\u6742\u7684\u7c7b\u578b\u53ef\u4ee5\u5305\u62ec\uff1a // Detailed object let obj : { name : string , age : number , address : string } = { name : \"qiubao\" , age : 57 , address : \"Tsinghua\" }; // Detailed array let arr : [ number , boolean ] = [ 1 , false ]; \u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6807\u6ce8\u5982\u4e0b\uff1a function sum ( x : number , y : number ) : number { return x + y ; } \u53e6\u5916\uff0c\u5982\u679c\u4f60\u8ba4\u4e3a\u4f60\u5bf9\u67d0\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\u5df2\u7ecf\u505a\u4e86\u5145\u5206\u7684\u68c0\u67e5\uff0c\u8ba4\u4e3a\u4e0d\u9700\u8981\u7f16\u8bd1\u5668\u68c0\u67e5\u5176\u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u8fdb\u884c \u7c7b\u578b\u65ad\u8a00 \uff1a let val : any = \"A string\" ; let stringLen : number = ( val as string ). length ; \u7b2c\u4e8c\u53e5\u7684\u542b\u4e49\u5c31\u662f\u65ad\u8a00 val \u53d8\u91cf\u4e00\u5b9a\u662f\u5b57\u7b26\u4e32\u3002","title":"\u7b80\u5355\u7684\u7c7b\u578b\u6807\u6ce8"},{"location":"languages/typescript/#_3","text":"TyepScript \u652f\u6301\u5c06\u53d8\u91cf\u58f0\u660e\u4e3a\u82e5\u5e72\u4e2a\u7c7b\u578b\u4e4b\u4e2d\u7684\u4e00\u79cd\uff0c\u8fd9\u4e00\u822c\u79f0\u4e3a\u8054\u5408\u7c7b\u578b\uff08\u82f1\u8bed\uff1aUnion type\uff09\u3002\u58f0\u660e\u8054\u5408\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u591a\u4e2a\u7c7b\u578b\u4e4b\u95f4\u4f7f\u7528 | \u9694\u5f00\uff1a let union : number | string = 7 ; union = \"string\" ; // OK \u8054\u5408\u7c7b\u578b\u6700\u5e38\u7528\u7684\u5730\u65b9\u662f\u6807\u6ce8\u51fd\u6570\u53c2\u6570\uff0c\u8fd9\u6837\u5c31\u5141\u8bb8\u4e86\u51fd\u6570\u63a5\u53d7\u591a\u79cd\u7c7b\u578b\u7684\u53c2\u6570\uff1a const addPrefix = ( x : number | string ) : void => { console . log ( \"Prefix \" + x ); }; addPrefix ( 1 ); // OK addPrefix ( \"String\" ); // OK \u4f46\u662f\u8981\u6ce8\u610f\uff0c\u5728\u8fd9\u79cd\u51fd\u6570\u4e4b\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u8c03\u7528\u88ab\u58f0\u660e\u4e3a\u8054\u5408\u7c7b\u578b\u7684\u53d8\u91cf\u7684\u5c5e\u6027\u7684\u65f6\u5019\uff0c \u53ea\u80fd\u8c03\u7528\u8fd9\u4e9b\u7c7b\u578b\u6240\u5171\u6709\u7684\u5c5e\u6027 \u3002\u6bd4\u5982\u8bf4\uff1a const foo = ( x : number | string ) => { let y : number = x . length ; }; // Error! \u539f\u56e0\u662f\u7f16\u8bd1\u5668\u5e76\u4e0d\u80fd\u6e05\u695a\u6b64\u5904\u7684\u53d8\u91cf\u7684\u5177\u4f53\u7c7b\u578b\u3002\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u6761\u4ef6\u5206\u652f\u5c06\u8fd9\u4e9b\u7c7b\u578b\u5206\u79bb\u5f00\u6765\uff1a const print = ( x : number | string ) : void => { if ( typeof x === \"string\" ) { console . log ( \"[string] \" + x ); return ; } // TAG }; \u7f16\u8bd1\u5668\u5b9e\u9645\u4e0a\u5c31\u5df2\u7ecf\u660e\u767d\u5728 if \u5206\u652f\u4e4b\u540e\u7684 // TAG \u90e8\u5206 x \u53ea\u6709\u53ef\u80fd\u662f number \u7c7b\u578b\uff0c\u4ece\u800c\u5c31\u53ef\u4ee5\u65ad\u5b9a\u5c5e\u6027\u8c03\u7528\u662f\u5426\u7b26\u5408\u7c7b\u578b\u6807\u6ce8\u3002\u8fd9\u88ab\u79f0\u4e3a\u7c7b\u578b\u6536\u7a84\uff08\u82f1\u8bed\uff1aType narrowing\uff09\u3002 \u8054\u5408\u7c7b\u578b\u5b9e\u73b0\u679a\u4e3e\u7c7b\u578b TypeScript \u7684\u7c7b\u578b\u7cfb\u7edf\u5b9e\u9645\u4e0a\u8fd8\u652f\u6301\u5982\u4e0b\u8fd9\u79cd\u7c7b\u578b\u6807\u6ce8\uff1a let a : 1 ; a = 1 ; // OK a = 2 ; // Error! \u5176\u5141\u8bb8\u6211\u4eec\u5c06\u6570\u5b57\u6216\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u4f5c\u4e3a\u7c7b\u578b\u7684\u4e00\u79cd\uff0c\u8fd9\u79cd\u6027\u8d28\u548c\u8054\u5408\u7c7b\u578b\u4e00\u5e76\u4f7f\u7528\u7684\u6548\u679c\u5c31\u7c7b\u4f3c\u4e8e\u679a\u4e3e\uff1a type TwoPowers = 1 | 2 | 4 | 8 | 16 ; let a : TwoPowers = 2 ; // OK let b : TwoPowers = 5 ; // Error! never \u7c7b\u578b\u4e0e\u8017\u5c3d\u68c0\u67e5 TypeScript \u8bed\u8a00\u652f\u6301\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u578b\uff0c\u5373 never \u7c7b\u578b\u3002\u8fd9\u79cd\u7c7b\u578b\u5e38\u88ab\u7528\u4e8e\u6807\u6ce8\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u4ee3\u8868\u8fd9\u4e2a\u51fd\u6570\u6c38\u8fdc\u4e0d\u4f1a\u7ec8\u7ed3\u6216\u8005\u4f1a\u629b\u51fa\u5f02\u5e38\uff1a const neverEnd = () : never => { while ( true ) {} }; \u8fd9\u4e2a\u6027\u8d28\u5c31\u4f7f\u5f97 \u4efb\u4f55\u53d8\u91cf\u5747\u4e0d\u53ef\u80fd\u662f never \u7c7b\u578b \uff0c\u5229\u7528\u8fd9\u4e2a\u7279\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u6d4b \u7a0b\u5e8f\u662f\u5426\u8003\u8651\u4e86\u6240\u6709\u7684\u60c5\u51b5 \uff0c\u8fd9\u88ab\u79f0\u4e3a\u8017\u5c3d\u68c0\u67e5\uff08\u82f1\u8bed\uff1aExhaustive check\uff09\u3002 \u4f8b\u5982\u6211\u4eec\u9700\u8981\u7f16\u5199\u51fd\u6570\u5904\u7406\u8054\u5408\u7c7b\u578b number | string | boolean \uff0c\u5176\u4ee3\u7801\u53ef\u80fd\u4e3a\uff1a type All = number | string | boolean ; const handle = ( x : All ) : void => { switch ( typeof x ) { case \"number\" : // DO SOMETHING break ; case \"string\" : // DO SOMETHING break ; case \"boolean\" : // DO SOMETHING break ; default : let exhaustiveCheck : never = x ; break ; } }; \u7406\u8bba\u4e0a default \u5206\u652f\u4e4b\u4e2d\u7684\u4ee3\u7801\u53ea\u8981\u6267\u884c\u5c31\u5fc5\u7136\u62a5\u9519\uff0c\u6240\u4ee5\u8bf4\u5982\u679c\u6240\u6709\u7684 case \u5206\u652f\u7a77\u5c3d\u4e86\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u5c31\u4e0d\u4f1a\u89e6\u53d1\u9519\u8bef\u3002\u800c\u5982\u679c\u67d0\u65e5 All \u7c7b\u578b\u6dfb\u52a0\u4e86\u65b0\u7684\u53ef\u80fd\u7c7b\u578b\uff1a type All = number | string | boolean | Foo ; \u90a3\u4e48 handle \u51fd\u6570\u5c31\u6709\u53ef\u80fd\u56e0\u4e3a\u6ca1\u6709\u8017\u5c3d\u6240\u6709\u53ef\u80fd\u800c\u62a5\u9519\uff0c\u63d0\u9192\u5f00\u53d1\u8005\u9700\u8981\u66f4\u65b0\u8fd9\u4e2a\u51fd\u6570\u3002\u8fd9\u79cd\u5904\u7406\u65b9\u5f0f\u7c7b\u4f3c\u4e8e C++ \u7a0b\u5e8f\u5728\u4e0d\u53ef\u80fd\u7684\u5206\u652f\u4e0a\u52a0\u5165 assert(false) \u8fdb\u884c\u68c0\u6d4b\u3002","title":"\u8054\u5408\u7c7b\u578b\u548c\u7c7b\u578b\u6536\u7a84"},{"location":"languages/typescript/#_4","text":"TypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u7c7b\u4f3c\u4e8e ES6 \u6807\u51c6\u4e2d JavaScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\uff0c\u6545\u6b64\u5904\u4ec5\u7ed9\u51fa\u6837\u4f8b\u7a0b\u5e8f\u800c\u4e0d\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cTypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u5141\u8bb8\u58f0\u660e\u7c7b\u6210\u5458\u548c\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650\u3002\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u590d\u6570\u7c7b\u7684\u4ee3\u7801\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u7c7b\u6210\u5458\u58f0\u660e\u3001\u7c7b\u65b9\u6cd5\u7f16\u5199\u3001\u6784\u9020\u51fd\u6570\u7b49\u57fa\u7840\u5185\u5bb9\uff1a class Complex { private real : number ; private imaginary : number ; constructor ( _real : number , _imaginary : number ) { this . real = _real ; this . imaginary = _imaginary ; } public print () : void { console . log ( ` ${ this . real } ${ this . imaginary >= 0 ? \"+\" : \"-\" } ${ Math . abs ( this . imaginary ) } i` ); } } let z : Complex = new Complex ( 2 , 3 ); z . print (); \u7c7b\u7ee7\u627f\u4f7f\u7528\u5173\u952e\u5b57 extends \uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u5fc5\u987b \u624b\u52a8\u4f7f\u7528 super \u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570\uff08\u5426\u5219\u65e0\u6cd5\u4f7f\u7528 this \u53d8\u91cf\uff09\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u88ab\u91cd\u5199\u7684\u7236\u7c7b\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 super \u5173\u952e\u5b57\u8c03\u7528\uff1a class Animal { private name : string ; constructor ( _name : string ) { this . name = _name ; } public move () : void { console . log ( \"Animal moves\" ); } } class Cat extends Animal { private furColor : string ; constructor ( _name : string , _color : string ) { super ( _name ); // Must call super() here! this . furColor = _color ; } public move () : void { console . log ( \"Cat runs\" ); } public baseMove () : void { super . move (); } } let tom : Cat = new Cat ( \"tom\" , \"blue\" ); tom . move (); tom . baseMove (); \u62bd\u8c61\u7c7b\u4f9d\u7136\u662f\u5b58\u5728\u7684\uff0c\u4f46\u5728\u5b9e\u9645\u5de5\u7a0b\u4e2d\u66f4\u5e38\u7528\u7684\u662f \u63a5\u53e3 \u3002\u56e0\u4e3a\u62bd\u8c61\u7c7b\u5b9e\u9645\u4e0a\u89c4\u5b9a\u4e86\u4e00\u4e2a\u5bf9\u8c61\u5e94\u5f53\u5177\u6709\u7684\u6210\u5458\u548c\u5bf9\u5916\u5f00\u653e\u7684\u63a5\u53e3\u683c\u5f0f\u3002 \u62bd\u8c61\u7c7b\u548c\u63a5\u53e3 \u6211\u4eec\u56de\u60f3\u5728 C++ \u8bed\u8a00\u4e4b\u4e2d\u7684\u62bd\u8c61\u7c7b\uff1a class Base { protected : int val ; public : virtual void print () = 0 ; }; class Derive : public Base { public : virtual void print () override { std :: cout << this -> val << std :: endl ; } }; \u4e8b\u5b9e\u4e0a\uff0c Base \u7c7b\u7684\u4f5c\u7528\u5c31\u662f \u7ea6\u675f\u5b50\u7c7b\u5fc5\u987b\u5177\u6709 val \u6210\u5458 \u548c \u7ea6\u675f\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199 print \u865a\u65b9\u6cd5 \uff0c\u524d\u8005\u89c4\u5b9a\u4e86\u5b50\u7c7b\u5fc5\u987b\u5177\u6709\u7684\u6210\u5458\uff0c\u540e\u8005\u89c4\u5b9a\u4e86\u5b50\u7c7b\u9700\u8981\u8bbe\u8ba1\u7684\u63a5\u53e3\u683c\u5f0f\uff08\u63a5\u53e3\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\u7c7b\u578b\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u62bd\u8c61\u7236\u7c7b\u7684\u4f5c\u7528\u662f\u7ea6\u675f\u5b50\u7c7b\u5e94\u5f53\u5177\u6709\u7684\u6210\u5458\u548c\u5bf9\u5916\u5f00\u653e\u7684\u63a5\u53e3\u683c\u5f0f\u3002\u5728\u8fd9\u4e2a\u610f\u4e49\u4e0a\uff0c\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u662f\u4e00\u81f4\u7684\u3002 TypeScript \u8bed\u8a00\u4e4b\u4e2d\u63a5\u53e3\u7684\u5b9a\u4e49\u4e3a\uff1a interface Point { x : number ; y : number ; print : () => void ; } \u4e4b\u540e\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u53bb\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c\u8fd9\u4e2a\u65f6\u5019\u8fd9\u4e2a\u7c7b\u5c31\u5fc5\u987b\u5177\u6709\u63a5\u53e3\u7684\u6210\u5458\u5e76\u5b9e\u73b0\u63a5\u53e3\u7684\u65b9\u6cd5\uff1a class Point3D implements Point { x : number ; y : number ; z : number ; ... print () : void { console . log ( `( ${ this . x } , ${ this . y } , ${ this . z } )` ); } ... } \u63a5\u53e3\u652f\u6301 \u53ef\u9009\u53c2\u6570 \u548c \u53ea\u8bfb\u53c2\u6570 \u3002\u53ef\u9009\u53c2\u6570\u4ee3\u8868\u8be5\u53c2\u6570\u53ef\u5177\u6709\u53ef\u4e0d\u5177\u6709\uff1a interface Point { x : number ; y : number ; z? : number ; } let twoDimensionPoint : Point = { x : 1 , y : 2 }; // OK \u53ea\u8bfb\u53c2\u6570\u4ee3\u8868\u8be5\u53c2\u6570\u53ea\u53ef\u8bfb\u53d6\u4e0d\u53ef\u4fee\u6539\uff1a interface User { name : string ; readonly password : string ; } let holder : User = { name : \"holder\" , password : \"111111\" }; holder . password = \"222222\" ; // Error!","title":"\u7c7b\u4e0e\u63a5\u53e3"},{"location":"languages/typescript/#_5","text":"TypeScript \u4f5c\u4e3a\u76ee\u524d\u8f83\u4e3a\u70ed\u95e8\u7684 JavaScript \u8bed\u8a00\u201c\u8865\u4e01\u201d\uff0c\u53ef\u4ee5\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5404\u79cd Web \u524d\u7aef\u6846\u67b6\u6216\u8005\u79fb\u52a8\u7aef\u6846\u67b6\u3002\u76ee\u524d\u7c7b\u4f3c React\u3001React Native\u3001Vue \u7b49\u5e38\u7528\u524d\u7aef\u6846\u67b6\u5747\u63d0\u4f9b\u4e86 TypeScript \u8bed\u8a00\u652f\u6301\u3002 \u540e\u7eed\u53ef\u4ee5\u9605\u8bfb\u7684\u6587\u6863\u6709\uff1a React \u6846\u67b6\u5165\u95e8 https://sast-skill-docers.github.io/sast-skill-docs/frontend/react-easy \u73b0\u4ee3 React \u6846\u67b6 https://sast-skill-docers.github.io/sast-skill-docs/frontend/react-more \u53ef\u4ee5\u5e94\u7528 TypeScript \u8bed\u8a00\u76f8\u5173\u77e5\u8bc6\u7684\u8bfe\u7a0b\uff1a \u8f6f\u4ef6\u5de5\u7a0b","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"languages/typescript/#_6","text":"TypeScript \u8bed\u8a00\u5b98\u65b9\u6587\u6863 https://www.tslang.cn/docs/home.html","title":"\u8d44\u6e90\u94fe\u63a5"}]}